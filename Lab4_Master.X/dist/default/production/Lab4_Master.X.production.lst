

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 10 00:16:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0009                     _PORTEbits	set	9
   461  0013                     _SSPBUF	set	19
   462  0014                     _SSPCON	set	20
   463  0009                     _PORTE	set	9
   464  0008                     _PORTD	set	8
   465  0006                     _PORTB	set	6
   466  0005                     _PORTA	set	5
   467  0063                     _SSPIF	set	99
   468  005E                     _PEIE	set	94
   469  005F                     _GIE	set	95
   470  0091                     _SSPCON2bits	set	145
   471  0087                     _TRISCbits	set	135
   472  0094                     _SSPSTAT	set	148
   473  0093                     _SSPADD	set	147
   474  0091                     _SSPCON2	set	145
   475  008F                     _OSCCONbits	set	143
   476  0089                     _TRISE	set	137
   477  0088                     _TRISD	set	136
   478  0086                     _TRISB	set	134
   479  0085                     _TRISA	set	133
   480  0463                     _SSPIE	set	1123
   481  043C                     _TRISC4	set	1084
   482  043B                     _TRISC3	set	1083
   483  0189                     _ANSELH	set	393
   484  0188                     _ANSEL	set	392
   485                           
   486                           	psect	strings
   487  0003                     __pstrings:
   488  0003                     stringtab:
   489  0003                     __stringtab:
   490                           
   491                           ;	String table - string pointers are 1 byte each
   492  0003  1BFF               	btfsc	btemp+1,7
   493  0004  280D               	ljmp	stringcode
   494  0005  1383               	bcf	3,7
   495  0006  187F               	btfsc	btemp+1,0
   496  0007  1783               	bsf	3,7
   497  0008  0800               	movf	0,w
   498  0009  0A84               	incf	4,f
   499  000A  1903               	skipnz
   500  000B  0AFF               	incf	btemp+1,f
   501  000C  0008               	return
   502  000D                     stringcode:
   503  000D                     stringdir:
   504  000D  3000               	movlw	high stringdir
   505  000E  008A               	movwf	10
   506  000F  0804               	movf	4,w
   507  0010  0A84               	incf	4,f
   508  0011  0782               	addwf	2,f
   509  0012                     __stringbase:
   510  0012  3400               	retlw	0
   511  0013                     __end_of__stringtab:
   512  0013                     STR_1:
   513  0013  3453               	retlw	83	;'S'
   514  0014  3431               	retlw	49	;'1'
   515  0015  3420               	retlw	32	;' '
   516  0016  3420               	retlw	32	;' '
   517  0017  3420               	retlw	32	;' '
   518  0018  3420               	retlw	32	;' '
   519  0019  3453               	retlw	83	;'S'
   520  001A  3432               	retlw	50	;'2'
   521  001B  3420               	retlw	32	;' '
   522  001C  3420               	retlw	32	;' '
   523  001D  3420               	retlw	32	;' '
   524  001E  3420               	retlw	32	;' '
   525  001F  3453               	retlw	83	;'S'
   526  0020  3433               	retlw	51	;'3'
   527  0021  3400               	retlw	0
   528                           
   529                           	psect	cinit
   530  07F3                     start_initialization:	
   531                           ; #config settings
   532                           
   533  07F3                     __initialization:
   534                           
   535                           ; Clear objects allocated to BANK0
   536  07F3  1383               	bcf	3,7	;select IRP bank0
   537  07F4  3020               	movlw	low __pbssBANK0
   538  07F5  0084               	movwf	4
   539  07F6  3036               	movlw	low (__pbssBANK0+22)
   540  07F7  120A  118A  21B6  120A  118A  	fcall	clear_ram0
   541  07FC                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  07FC                     __end_of__initialization:
   545  07FC  0183               	clrf	3
   546  07FD  120A  118A  2EA6   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssBANK0
   549  0020                     __pbssBANK0:
   550  0020                     _AU3:
   551  0020                     	ds	1
   552  0021                     _AU2:
   553  0021                     	ds	1
   554  0022                     _AU1:
   555  0022                     	ds	1
   556  0023                     _AD3:
   557  0023                     	ds	1
   558  0024                     _AD2:
   559  0024                     	ds	1
   560  0025                     _AD1:
   561  0025                     	ds	1
   562  0026                     _AC3:
   563  0026                     	ds	1
   564  0027                     _AC2:
   565  0027                     	ds	1
   566  0028                     _AC1:
   567  0028                     	ds	1
   568  0029                     _Un3:
   569  0029                     	ds	1
   570  002A                     _Un2:
   571  002A                     	ds	1
   572  002B                     _Un1:
   573  002B                     	ds	1
   574  002C                     _Dec3:
   575  002C                     	ds	1
   576  002D                     _Dec2:
   577  002D                     	ds	1
   578  002E                     _Dec1:
   579  002E                     	ds	1
   580  002F                     _Cen3:
   581  002F                     	ds	1
   582  0030                     _Cen2:
   583  0030                     	ds	1
   584  0031                     _Cen1:
   585  0031                     	ds	1
   586  0032                     _NUM:
   587  0032                     	ds	1
   588  0033                     _CONT:
   589  0033                     	ds	1
   590  0034                     _TEMP:
   591  0034                     	ds	1
   592  0035                     _POT:
   593  0035                     	ds	1
   594                           
   595                           	psect	clrtext
   596  01B6                     clear_ram0:	
   597                           ;	Called with FSR containing the base address, and
   598                           ;	W with the last address+1
   599                           
   600  01B6  0064               	clrwdt	;clear the watchdog before getting into this loop
   601  01B7                     clrloop0:
   602  01B7  0180               	clrf	0	;clear RAM location pointed to by FSR
   603  01B8  0A84               	incf	4,f	;increment pointer
   604  01B9  0604               	xorwf	4,w	;XOR with final address
   605  01BA  1903               	btfsc	3,2	;have we reached the end yet?
   606  01BB  3400               	retlw	0	;all done for this memory range, return
   607  01BC  0604               	xorwf	4,w	;XOR again to restore value
   608  01BD  29B7               	goto	clrloop0	;do the next byte
   609                           
   610                           	psect	cstackCOMMON
   611  0070                     __pcstackCOMMON:
   612  0070                     ?_setup:
   613  0070                     ?_Lcd_Init:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_conver:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_LECT1:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_LECT2:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_LECT3:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_I2C_Master_Start:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_I2C_Master_Start:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_I2C_Master_Write:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_I2C_Master_Stop:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_I2C_Master_Stop:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_num_ascii:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_num_ascii:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_I2C_Master_Wait:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_I2C_Master_Wait:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_Lcd_Port:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_Lcd_Port:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Lcd_Cmd:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Lcd_Write_Char:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?___bmul:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_I2C_Master_Read:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?___wmul:	
   677                           ; 2 bytes @ 0x0
   678                           
   679  0070                     ?___lldiv:	
   680                           ; 2 bytes @ 0x0
   681                           
   682  0070                     conver@AD3:	
   683                           ; 4 bytes @ 0x0
   684                           
   685  0070                     Lcd_Port@a:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ___bmul@multiplicand:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     I2C_Master_Write@d:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     I2C_Master_Read@a:	
   695                           ; 2 bytes @ 0x0
   696                           
   697  0070                     ___wmul@multiplier:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0070                     ___lldiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 4 bytes @ 0x0
   705  0070                     	ds	1
   706  0071                     ??_Lcd_Cmd:
   707  0071                     ??_Lcd_Write_Char:	
   708                           ; 1 bytes @ 0x1
   709                           
   710  0071                     ??___bmul:	
   711                           ; 1 bytes @ 0x1
   712                           
   713  0071                     conver@AU3:	
   714                           ; 1 bytes @ 0x1
   715                           
   716                           
   717                           ; 1 bytes @ 0x1
   718  0071                     	ds	1
   719  0072                     ??_conver:
   720  0072                     ??_I2C_Master_Write:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ??_I2C_Master_Read:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0072                     Lcd_Write_Char@a:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     num_ascii@num:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0072                     ___bmul@product:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     ___wmul@multiplicand:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 2 bytes @ 0x2
   740  0072                     	ds	1
   741  0073                     ?_Lcd_Write_String:
   742  0073                     Lcd_Cmd@a:	
   743                           ; 1 bytes @ 0x3
   744                           
   745  0073                     ___bmul@multiplier:	
   746                           ; 1 bytes @ 0x3
   747                           
   748  0073                     Lcd_Write_String@a:	
   749                           ; 1 bytes @ 0x3
   750                           
   751                           
   752                           ; 2 bytes @ 0x3
   753  0073                     	ds	1
   754  0074                     ??_Lcd_Init:
   755  0074                     ?_Lcd_Set_Cursor:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     ??___wmul:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     Lcd_Set_Cursor@b:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     I2C_Master_Read@temp:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ___wmul@product:	
   768                           ; 2 bytes @ 0x4
   769                           
   770  0074                     ___lldiv@dividend:	
   771                           ; 2 bytes @ 0x4
   772                           
   773                           
   774                           ; 4 bytes @ 0x4
   775  0074                     	ds	1
   776  0075                     ??_Lcd_Set_Cursor:
   777  0075                     ??_Lcd_Write_String:	
   778                           ; 1 bytes @ 0x5
   779                           
   780                           
   781                           ; 1 bytes @ 0x5
   782  0075                     	ds	1
   783  0076                     ?___awdiv:
   784  0076                     Lcd_Set_Cursor@a:	
   785                           ; 2 bytes @ 0x6
   786                           
   787  0076                     ___awdiv@divisor:	
   788                           ; 1 bytes @ 0x6
   789                           
   790                           
   791                           ; 2 bytes @ 0x6
   792  0076                     	ds	1
   793  0077                     Lcd_Set_Cursor@temp:
   794                           
   795                           ; 1 bytes @ 0x7
   796  0077                     	ds	1
   797  0078                     ??___lldiv:
   798  0078                     Lcd_Write_String@i:	
   799                           ; 1 bytes @ 0x8
   800                           
   801  0078                     ___awdiv@dividend:	
   802                           ; 2 bytes @ 0x8
   803                           
   804                           
   805                           ; 2 bytes @ 0x8
   806  0078                     	ds	1
   807  0079                     ___lldiv@quotient:
   808                           
   809                           ; 4 bytes @ 0x9
   810  0079                     	ds	1
   811  007A                     ??___awdiv:
   812                           
   813                           ; 1 bytes @ 0xA
   814  007A                     	ds	1
   815  007B                     ??_LECT2:
   816                           
   817                           ; 1 bytes @ 0xB
   818  007B                     	ds	2
   819  007D                     ___lldiv@counter:
   820                           
   821                           ; 1 bytes @ 0xD
   822  007D                     	ds	1
   823  007E                     ??_setup:
   824                           
   825                           	psect	cstackBANK0
   826  0036                     __pcstackBANK0:	
   827                           ; 1 bytes @ 0xE
   828                           
   829  0036                     ?_I2C_Master_Init:
   830  0036                     ___awdiv@counter:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0036                     I2C_Master_Init@c:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0036                     conver@temporal:	
   837                           ; 4 bytes @ 0x0
   838                           
   839                           
   840                           ; 16 bytes @ 0x0
   841  0036                     	ds	1
   842  0037                     ___awdiv@sign:
   843                           
   844                           ; 1 bytes @ 0x1
   845  0037                     	ds	1
   846  0038                     ___awdiv@quotient:
   847                           
   848                           ; 2 bytes @ 0x2
   849  0038                     	ds	2
   850  003A                     ??_LECT1:
   851  003A                     ??_LECT3:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  003A                     ??_I2C_Master_Init:	
   855                           ; 1 bytes @ 0x4
   856                           
   857                           
   858                           ; 1 bytes @ 0x4
   859  003A                     	ds	12
   860  0046                     conver@AC3:
   861                           
   862                           ; 1 bytes @ 0x10
   863  0046                     	ds	1
   864  0047                     ??_main:
   865                           
   866                           ; 1 bytes @ 0x11
   867  0047                     	ds	3
   868                           
   869                           	psect	maintext
   870  06A6                     __pmaintext:	
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 76 in file "main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : B00/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       3       0       0       0
   893 ;;      Totals:         0       3       0       0       0
   894 ;;Total ram usage:        3 bytes
   895 ;; Hardware stack levels required when called: 3
   896 ;; This function calls:
   897 ;;		_I2C_Master_Read
   898 ;;		_I2C_Master_Start
   899 ;;		_I2C_Master_Stop
   900 ;;		_I2C_Master_Write
   901 ;;		_LECT1
   902 ;;		_LECT2
   903 ;;		_LECT3
   904 ;;		_Lcd_Init
   905 ;;		_Lcd_Set_Cursor
   906 ;;		_Lcd_Write_String
   907 ;;		_conver
   908 ;;		_setup
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _main
   916  06A6                     _main:
   917  06A6                     l1567:	
   918                           ;incstack = 0
   919                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   920                           
   921                           
   922                           ;main.c: 77:     setup();
   923  06A6  120A  118A  228A  120A  118A  	fcall	_setup
   924                           
   925                           ;main.c: 78:     Lcd_Init();
   926  06AB  120A  118A  2228  120A  118A  	fcall	_Lcd_Init
   927  06B0                     l101:	
   928                           ;main.c: 79:     while(1){
   929                           
   930                           
   931                           ;main.c: 80:         Lcd_Set_Cursor(1,1);
   932  06B0  01F4               	clrf	Lcd_Set_Cursor@b
   933  06B1  0AF4               	incf	Lcd_Set_Cursor@b,f
   934  06B2  3001               	movlw	1
   935  06B3  120A  118A  2241  120A  118A  	fcall	_Lcd_Set_Cursor
   936  06B8                     l1569:
   937                           
   938                           ;main.c: 81:         Lcd_Write_String("S1    S2    S3");
   939  06B8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   940  06B9  00F3               	movwf	Lcd_Write_String@a
   941  06BA  3080               	movlw	128
   942  06BB  00F4               	movwf	Lcd_Write_String@a+1
   943  06BC  120A  118A  2393  120A  118A  	fcall	_Lcd_Write_String
   944  06C1                     l1571:
   945                           
   946                           ;main.c: 82:         Lcd_Set_Cursor(2,1);
   947  06C1  01F4               	clrf	Lcd_Set_Cursor@b
   948  06C2  0AF4               	incf	Lcd_Set_Cursor@b,f
   949  06C3  3002               	movlw	2
   950  06C4  120A  118A  2241  120A  118A  	fcall	_Lcd_Set_Cursor
   951                           
   952                           ;main.c: 83:         Lcd_Write_String(conver(AC3, AD3, AU3));
   953  06C9  1283               	bcf	3,5	;RP0=0, select bank0
   954  06CA  1303               	bcf	3,6	;RP1=0, select bank0
   955  06CB  0823               	movf	_AD3,w
   956  06CC  00C7               	movwf	??_main
   957  06CD  0847               	movf	??_main,w
   958  06CE  00F0               	movwf	conver@AD3
   959  06CF  0820               	movf	_AU3,w
   960  06D0  00C8               	movwf	??_main+1
   961  06D1  0848               	movf	??_main+1,w
   962  06D2  00F1               	movwf	conver@AU3
   963  06D3  0826               	movf	_AC3,w
   964  06D4  120A  118A  23D5  120A  118A  	fcall	_conver
   965  06D9  00F3               	movwf	Lcd_Write_String@a
   966  06DA  3000               	movlw	0
   967  06DB  00F4               	movwf	Lcd_Write_String@a+1
   968  06DC  120A  118A  2393  120A  118A  	fcall	_Lcd_Write_String
   969  06E1                     l1573:
   970                           
   971                           ;main.c: 84:         LECT1();
   972  06E1  120A  118A  24E9  120A  118A  	fcall	_LECT1
   973  06E6                     l1575:
   974                           
   975                           ;main.c: 85:         LECT2();
   976  06E6  120A  118A  2354  120A  118A  	fcall	_LECT2
   977  06EB                     l1577:
   978                           
   979                           ;main.c: 86:         LECT3();
   980  06EB  120A  118A  2597  120A  118A  	fcall	_LECT3
   981  06F0                     l1579:
   982                           
   983                           ;main.c: 88:         I2C_Master_Start();
   984  06F0  120A  118A  21BE  120A  118A  	fcall	_I2C_Master_Start
   985  06F5                     l1581:
   986                           
   987                           ;main.c: 89:         I2C_Master_Write(0x50);
   988  06F5  3050               	movlw	80
   989  06F6  00F0               	movwf	I2C_Master_Write@d
   990  06F7  3000               	movlw	0
   991  06F8  00F1               	movwf	I2C_Master_Write@d+1
   992  06F9  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
   993  06FE                     l1583:
   994                           
   995                           ;main.c: 90:         I2C_Master_Write(0);
   996  06FE  3000               	movlw	0
   997  06FF  00F0               	movwf	I2C_Master_Write@d
   998  0700  00F1               	movwf	I2C_Master_Write@d+1
   999  0701  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1000  0706                     l1585:
  1001                           
  1002                           ;main.c: 91:         I2C_Master_Stop();
  1003  0706  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
  1004  070B                     l1587:
  1005                           
  1006                           ;main.c: 92:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1007  070B  301A               	movlw	26
  1008  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1009  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1010  070E  00C8               	movwf	??_main+1
  1011  070F  30F7               	movlw	247
  1012  0710  00C7               	movwf	??_main
  1013  0711                     u677:
  1014  0711  0BC7               	decfsz	??_main,f
  1015  0712  2F11               	goto	u677
  1016  0713  0BC8               	decfsz	??_main+1,f
  1017  0714  2F11               	goto	u677
  1018  0715  2F16               	nop2
  1019  0716                     l1589:
  1020                           
  1021                           ;main.c: 94:         I2C_Master_Start();
  1022  0716  120A  118A  21BE  120A  118A  	fcall	_I2C_Master_Start
  1023  071B                     l1591:
  1024                           
  1025                           ;main.c: 95:         I2C_Master_Write(0x51);
  1026  071B  3051               	movlw	81
  1027  071C  00F0               	movwf	I2C_Master_Write@d
  1028  071D  3000               	movlw	0
  1029  071E  00F1               	movwf	I2C_Master_Write@d+1
  1030  071F  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1031  0724                     l1593:
  1032                           
  1033                           ;main.c: 96:         POT = I2C_Master_Read(0);
  1034  0724  3000               	movlw	0
  1035  0725  00F0               	movwf	I2C_Master_Read@a
  1036  0726  00F1               	movwf	I2C_Master_Read@a+1
  1037  0727  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Read
  1038  072C  0870               	movf	?_I2C_Master_Read,w
  1039  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1040  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1041  072F  00C7               	movwf	??_main
  1042  0730  0847               	movf	??_main,w
  1043  0731  00B5               	movwf	_POT
  1044  0732                     l1595:
  1045                           
  1046                           ;main.c: 97:         I2C_Master_Stop();
  1047  0732  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
  1048  0737                     l1597:
  1049                           
  1050                           ;main.c: 98:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1051  0737  301A               	movlw	26
  1052  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1054  073A  00C8               	movwf	??_main+1
  1055  073B  30F7               	movlw	247
  1056  073C  00C7               	movwf	??_main
  1057  073D                     u687:
  1058  073D  0BC7               	decfsz	??_main,f
  1059  073E  2F3D               	goto	u687
  1060  073F  0BC8               	decfsz	??_main+1,f
  1061  0740  2F3D               	goto	u687
  1062  0741  2F42               	nop2
  1063  0742                     l1599:
  1064                           
  1065                           ;main.c: 100:         I2C_Master_Start();
  1066  0742  120A  118A  21BE  120A  118A  	fcall	_I2C_Master_Start
  1067  0747                     l1601:
  1068                           
  1069                           ;main.c: 101:         I2C_Master_Write(0x60);
  1070  0747  3060               	movlw	96
  1071  0748  00F0               	movwf	I2C_Master_Write@d
  1072  0749  3000               	movlw	0
  1073  074A  00F1               	movwf	I2C_Master_Write@d+1
  1074  074B  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1075  0750                     l1603:
  1076                           
  1077                           ;main.c: 102:         I2C_Master_Write(0);
  1078  0750  3000               	movlw	0
  1079  0751  00F0               	movwf	I2C_Master_Write@d
  1080  0752  00F1               	movwf	I2C_Master_Write@d+1
  1081  0753  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1082  0758                     l1605:
  1083                           
  1084                           ;main.c: 103:         I2C_Master_Stop();
  1085  0758  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
  1086  075D                     l1607:
  1087                           
  1088                           ;main.c: 104:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1089  075D  301A               	movlw	26
  1090  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1091  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0760  00C8               	movwf	??_main+1
  1093  0761  30F7               	movlw	247
  1094  0762  00C7               	movwf	??_main
  1095  0763                     u697:
  1096  0763  0BC7               	decfsz	??_main,f
  1097  0764  2F63               	goto	u697
  1098  0765  0BC8               	decfsz	??_main+1,f
  1099  0766  2F63               	goto	u697
  1100  0767  2F68               	nop2
  1101  0768                     l1609:
  1102                           
  1103                           ;main.c: 106:         I2C_Master_Start();
  1104  0768  120A  118A  21BE  120A  118A  	fcall	_I2C_Master_Start
  1105  076D                     l1611:
  1106                           
  1107                           ;main.c: 107:         I2C_Master_Write(0x61);
  1108  076D  3061               	movlw	97
  1109  076E  00F0               	movwf	I2C_Master_Write@d
  1110  076F  3000               	movlw	0
  1111  0770  00F1               	movwf	I2C_Master_Write@d+1
  1112  0771  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1113  0776                     l1613:
  1114                           
  1115                           ;main.c: 108:         CONT = I2C_Master_Read(0);
  1116  0776  3000               	movlw	0
  1117  0777  00F0               	movwf	I2C_Master_Read@a
  1118  0778  00F1               	movwf	I2C_Master_Read@a+1
  1119  0779  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Read
  1120  077E  0870               	movf	?_I2C_Master_Read,w
  1121  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0781  00C7               	movwf	??_main
  1124  0782  0847               	movf	??_main,w
  1125  0783  00B3               	movwf	_CONT
  1126  0784                     l1615:
  1127                           
  1128                           ;main.c: 109:         I2C_Master_Stop();
  1129  0784  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
  1130  0789                     l1617:
  1131                           
  1132                           ;main.c: 110:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1133  0789  301A               	movlw	26
  1134  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1135  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1136  078C  00C8               	movwf	??_main+1
  1137  078D  30F7               	movlw	247
  1138  078E  00C7               	movwf	??_main
  1139  078F                     u707:
  1140  078F  0BC7               	decfsz	??_main,f
  1141  0790  2F8F               	goto	u707
  1142  0791  0BC8               	decfsz	??_main+1,f
  1143  0792  2F8F               	goto	u707
  1144  0793  2F94               	nop2
  1145  0794                     l1619:
  1146                           
  1147                           ;main.c: 112:         I2C_Master_Start();
  1148  0794  120A  118A  21BE  120A  118A  	fcall	_I2C_Master_Start
  1149  0799                     l1621:
  1150                           
  1151                           ;main.c: 113:         I2C_Master_Write(0x80);
  1152  0799  3080               	movlw	128
  1153  079A  00F0               	movwf	I2C_Master_Write@d
  1154  079B  3000               	movlw	0
  1155  079C  00F1               	movwf	I2C_Master_Write@d+1
  1156  079D  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1157  07A2                     l1623:
  1158                           
  1159                           ;main.c: 114:         I2C_Master_Write(0xF3);
  1160  07A2  30F3               	movlw	243
  1161  07A3  00F0               	movwf	I2C_Master_Write@d
  1162  07A4  3000               	movlw	0
  1163  07A5  00F1               	movwf	I2C_Master_Write@d+1
  1164  07A6  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1165  07AB                     l1625:
  1166                           
  1167                           ;main.c: 115:         I2C_Master_Stop();
  1168  07AB  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
  1169  07B0                     l1627:
  1170                           
  1171                           ;main.c: 116:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1172  07B0  3002               	movlw	2
  1173  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1174  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1175  07B3  00C9               	movwf	??_main+2
  1176  07B4  3004               	movlw	4
  1177  07B5  00C8               	movwf	??_main+1
  1178  07B6  30B9               	movlw	185
  1179  07B7  00C7               	movwf	??_main
  1180  07B8                     u717:
  1181  07B8  0BC7               	decfsz	??_main,f
  1182  07B9  2FB8               	goto	u717
  1183  07BA  0BC8               	decfsz	??_main+1,f
  1184  07BB  2FB8               	goto	u717
  1185  07BC  0BC9               	decfsz	??_main+2,f
  1186  07BD  2FB8               	goto	u717
  1187  07BE  2FBF               	nop2
  1188  07BF                     l1629:
  1189                           
  1190                           ;main.c: 118:         I2C_Master_Start();
  1191  07BF  120A  118A  21BE  120A  118A  	fcall	_I2C_Master_Start
  1192  07C4                     l1631:
  1193                           
  1194                           ;main.c: 119:         I2C_Master_Write(0x81);
  1195  07C4  3081               	movlw	129
  1196  07C5  00F0               	movwf	I2C_Master_Write@d
  1197  07C6  3000               	movlw	0
  1198  07C7  00F1               	movwf	I2C_Master_Write@d+1
  1199  07C8  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Write
  1200  07CD                     l1633:
  1201                           
  1202                           ;main.c: 120:         TEMP = I2C_Master_Read(0);
  1203  07CD  3000               	movlw	0
  1204  07CE  00F0               	movwf	I2C_Master_Read@a
  1205  07CF  00F1               	movwf	I2C_Master_Read@a+1
  1206  07D0  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Read
  1207  07D5  0870               	movf	?_I2C_Master_Read,w
  1208  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1209  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1210  07D8  00C7               	movwf	??_main
  1211  07D9  0847               	movf	??_main,w
  1212  07DA  00B4               	movwf	_TEMP
  1213  07DB                     l1635:
  1214                           
  1215                           ;main.c: 121:         I2C_Master_Stop();
  1216  07DB  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
  1217  07E0                     l1637:
  1218                           
  1219                           ;main.c: 122:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1220  07E0  3002               	movlw	2
  1221  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1222  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1223  07E3  00C9               	movwf	??_main+2
  1224  07E4  3004               	movlw	4
  1225  07E5  00C8               	movwf	??_main+1
  1226  07E6  30B9               	movlw	185
  1227  07E7  00C7               	movwf	??_main
  1228  07E8                     u727:
  1229  07E8  0BC7               	decfsz	??_main,f
  1230  07E9  2FE8               	goto	u727
  1231  07EA  0BC8               	decfsz	??_main+1,f
  1232  07EB  2FE8               	goto	u727
  1233  07EC  0BC9               	decfsz	??_main+2,f
  1234  07ED  2FE8               	goto	u727
  1235  07EE  2FEF               	nop2
  1236  07EF  2EB0               	goto	l101
  1237  07F0  120A  118A  2800   	ljmp	start
  1238  07F3                     __end_of_main:
  1239                           
  1240                           	psect	text1
  1241  028A                     __ptext1:	
  1242 ;; *************** function _setup *****************
  1243 ;; Defined at:
  1244 ;;		line 129 in file "main.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0
  1261 ;;      Totals:         0       0       0       0       0
  1262 ;;Total ram usage:        0 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 2
  1265 ;; This function calls:
  1266 ;;		_I2C_Master_Init
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _setup
  1274  028A                     _setup:
  1275  028A                     l1467:	
  1276                           ;incstack = 0
  1277                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1278                           
  1279                           
  1280                           ;main.c: 130:     ANSEL = 0;
  1281  028A  1683               	bsf	3,5	;RP0=1, select bank3
  1282  028B  1703               	bsf	3,6	;RP1=1, select bank3
  1283  028C  0188               	clrf	8	;volatile
  1284                           
  1285                           ;main.c: 131:     ANSELH = 0;
  1286  028D  0189               	clrf	9	;volatile
  1287                           
  1288                           ;main.c: 132:     TRISA = 0;
  1289  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1290  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1291  0290  0185               	clrf	5	;volatile
  1292                           
  1293                           ;main.c: 133:     TRISB = 0;
  1294  0291  0186               	clrf	6	;volatile
  1295                           
  1296                           ;main.c: 134:     TRISD = 0;
  1297  0292  0188               	clrf	8	;volatile
  1298                           
  1299                           ;main.c: 135:     TRISE = 0;
  1300  0293  0189               	clrf	9	;volatile
  1301                           
  1302                           ;main.c: 136:     PORTA = 0;
  1303  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0296  0185               	clrf	5	;volatile
  1306                           
  1307                           ;main.c: 137:     PORTB = 0;
  1308  0297  0186               	clrf	6	;volatile
  1309                           
  1310                           ;main.c: 138:     PORTD = 0;
  1311  0298  0188               	clrf	8	;volatile
  1312                           
  1313                           ;main.c: 139:     PORTE = 0;
  1314  0299  0189               	clrf	9	;volatile
  1315  029A                     l1469:
  1316                           
  1317                           ;main.c: 140:     OSCCONbits.IRCF0 = 1;
  1318  029A  1683               	bsf	3,5	;RP0=1, select bank1
  1319  029B  1303               	bcf	3,6	;RP1=0, select bank1
  1320  029C  160F               	bsf	15,4	;volatile
  1321  029D                     l1471:
  1322                           
  1323                           ;main.c: 141:     OSCCONbits.IRCF1 = 1;
  1324  029D  168F               	bsf	15,5	;volatile
  1325  029E                     l1473:
  1326                           
  1327                           ;main.c: 142:     OSCCONbits.IRCF2 = 1;
  1328  029E  170F               	bsf	15,6	;volatile
  1329  029F                     l1475:
  1330                           
  1331                           ;main.c: 143:     I2C_Master_Init(100000);
  1332  029F  3000               	movlw	0
  1333  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1334  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1335  02A2  00B9               	movwf	I2C_Master_Init@c+3
  1336  02A3  3001               	movlw	1
  1337  02A4  00B8               	movwf	I2C_Master_Init@c+2
  1338  02A5  3086               	movlw	134
  1339  02A6  00B7               	movwf	I2C_Master_Init@c+1
  1340  02A7  30A0               	movlw	160
  1341  02A8  00B6               	movwf	I2C_Master_Init@c
  1342  02A9  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Init
  1343  02AE                     l107:
  1344  02AE  0008               	return
  1345  02AF                     __end_of_setup:
  1346                           
  1347                           	psect	text2
  1348  02DD                     __ptext2:	
  1349 ;; *************** function _I2C_Master_Init *****************
  1350 ;; Defined at:
  1351 ;;		line 16 in file "I2C.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  c               4    0[BANK0 ] const unsigned long 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0, pclath, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1365 ;;      Params:         0       4       0       0       0
  1366 ;;      Locals:         0       0       0       0       0
  1367 ;;      Temps:          0       4       0       0       0
  1368 ;;      Totals:         0       8       0       0       0
  1369 ;;Total ram usage:        8 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 1
  1372 ;; This function calls:
  1373 ;;		___lldiv
  1374 ;; This function is called by:
  1375 ;;		_setup
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _I2C_Master_Init
  1381  02DD                     _I2C_Master_Init:
  1382  02DD                     l1279:	
  1383                           ;incstack = 0
  1384                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1385                           
  1386                           
  1387                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1388  02DD  3028               	movlw	40
  1389  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1390  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1391  02E0  0094               	movwf	20	;volatile
  1392  02E1                     l1281:
  1393                           
  1394                           ;I2C.c: 19:     SSPCON2 = 0;
  1395  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  1396  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  1397  02E3  0191               	clrf	17	;volatile
  1398  02E4                     l1283:
  1399                           
  1400                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1401  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1402  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1403  02E6  0836               	movf	I2C_Master_Init@c,w
  1404  02E7  00BA               	movwf	??_I2C_Master_Init
  1405  02E8  0837               	movf	I2C_Master_Init@c+1,w
  1406  02E9  00BB               	movwf	??_I2C_Master_Init+1
  1407  02EA  0838               	movf	I2C_Master_Init@c+2,w
  1408  02EB  00BC               	movwf	??_I2C_Master_Init+2
  1409  02EC  0839               	movf	I2C_Master_Init@c+3,w
  1410  02ED  00BD               	movwf	??_I2C_Master_Init+3
  1411  02EE  3002               	movlw	2
  1412  02EF                     u415:
  1413  02EF  1003               	clrc
  1414  02F0  0DBA               	rlf	??_I2C_Master_Init,f
  1415  02F1  0DBB               	rlf	??_I2C_Master_Init+1,f
  1416  02F2  0DBC               	rlf	??_I2C_Master_Init+2,f
  1417  02F3  0DBD               	rlf	??_I2C_Master_Init+3,f
  1418  02F4                     u410:
  1419  02F4  3EFF               	addlw	-1
  1420  02F5  1D03               	skipz
  1421  02F6  2AEF               	goto	u415
  1422  02F7  083D               	movf	??_I2C_Master_Init+3,w
  1423  02F8  00F3               	movwf	___lldiv@divisor+3
  1424  02F9  083C               	movf	??_I2C_Master_Init+2,w
  1425  02FA  00F2               	movwf	___lldiv@divisor+2
  1426  02FB  083B               	movf	??_I2C_Master_Init+1,w
  1427  02FC  00F1               	movwf	___lldiv@divisor+1
  1428  02FD  083A               	movf	??_I2C_Master_Init,w
  1429  02FE  00F0               	movwf	___lldiv@divisor
  1430  02FF  3000               	movlw	0
  1431  0300  00F7               	movwf	___lldiv@dividend+3
  1432  0301  307A               	movlw	122
  1433  0302  00F6               	movwf	___lldiv@dividend+2
  1434  0303  3012               	movlw	18
  1435  0304  00F5               	movwf	___lldiv@dividend+1
  1436  0305  3000               	movlw	0
  1437  0306  00F4               	movwf	___lldiv@dividend
  1438  0307  120A  118A  241A  120A  118A  	fcall	___lldiv
  1439  030C  0870               	movf	?___lldiv,w
  1440  030D  3EFF               	addlw	255
  1441  030E  1683               	bsf	3,5	;RP0=1, select bank1
  1442  030F  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0310  0093               	movwf	19	;volatile
  1444  0311                     l1285:
  1445                           
  1446                           ;I2C.c: 21:     SSPSTAT = 0;
  1447  0311  0194               	clrf	20	;volatile
  1448  0312                     l1287:
  1449                           
  1450                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1451  0312  1587               	bsf	7,3	;volatile
  1452  0313                     l1289:
  1453                           
  1454                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1455  0313  1607               	bsf	7,4	;volatile
  1456  0314                     l150:
  1457  0314  0008               	return
  1458  0315                     __end_of_I2C_Master_Init:
  1459                           
  1460                           	psect	text3
  1461  041A                     __ptext3:	
  1462 ;; *************** function ___lldiv *****************
  1463 ;; Defined at:
  1464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  divisor         4    0[COMMON] unsigned long 
  1467 ;;  dividend        4    4[COMMON] unsigned long 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  quotient        4    9[COMMON] unsigned long 
  1470 ;;  counter         1   13[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  4    0[COMMON] unsigned long 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         8       0       0       0       0
  1481 ;;      Locals:         5       0       0       0       0
  1482 ;;      Temps:          1       0       0       0       0
  1483 ;;      Totals:        14       0       0       0       0
  1484 ;;Total ram usage:       14 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_I2C_Master_Init
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function ___lldiv
  1495  041A                     ___lldiv:
  1496  041A                     l1255:	
  1497                           ;incstack = 0
  1498                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1499                           
  1500  041A  3000               	movlw	0
  1501  041B  00FC               	movwf	___lldiv@quotient+3
  1502  041C  3000               	movlw	0
  1503  041D  00FB               	movwf	___lldiv@quotient+2
  1504  041E  3000               	movlw	0
  1505  041F  00FA               	movwf	___lldiv@quotient+1
  1506  0420  3000               	movlw	0
  1507  0421  00F9               	movwf	___lldiv@quotient
  1508  0422  0873               	movf	___lldiv@divisor+3,w
  1509  0423  0472               	iorwf	___lldiv@divisor+2,w
  1510  0424  0471               	iorwf	___lldiv@divisor+1,w
  1511  0425  0470               	iorwf	___lldiv@divisor,w
  1512  0426  1903               	skipnz
  1513  0427  2C29               	goto	u341
  1514  0428  2C2A               	goto	u340
  1515  0429                     u341:
  1516  0429  2C77               	goto	l1275
  1517  042A                     u340:
  1518  042A                     l1257:
  1519  042A  01FD               	clrf	___lldiv@counter
  1520  042B  0AFD               	incf	___lldiv@counter,f
  1521  042C  2C3A               	goto	l1261
  1522  042D                     l1259:
  1523  042D  3001               	movlw	1
  1524  042E  00F8               	movwf	??___lldiv
  1525  042F                     u355:
  1526  042F  1003               	clrc
  1527  0430  0DF0               	rlf	___lldiv@divisor,f
  1528  0431  0DF1               	rlf	___lldiv@divisor+1,f
  1529  0432  0DF2               	rlf	___lldiv@divisor+2,f
  1530  0433  0DF3               	rlf	___lldiv@divisor+3,f
  1531  0434  0BF8               	decfsz	??___lldiv,f
  1532  0435  2C2F               	goto	u355
  1533  0436  3001               	movlw	1
  1534  0437  00F8               	movwf	??___lldiv
  1535  0438  0878               	movf	??___lldiv,w
  1536  0439  07FD               	addwf	___lldiv@counter,f
  1537  043A                     l1261:
  1538  043A  1FF3               	btfss	___lldiv@divisor+3,7
  1539  043B  2C3D               	goto	u361
  1540  043C  2C3E               	goto	u360
  1541  043D                     u361:
  1542  043D  2C2D               	goto	l1259
  1543  043E                     u360:
  1544  043E                     l1263:
  1545  043E  3001               	movlw	1
  1546  043F  00F8               	movwf	??___lldiv
  1547  0440                     u375:
  1548  0440  1003               	clrc
  1549  0441  0DF9               	rlf	___lldiv@quotient,f
  1550  0442  0DFA               	rlf	___lldiv@quotient+1,f
  1551  0443  0DFB               	rlf	___lldiv@quotient+2,f
  1552  0444  0DFC               	rlf	___lldiv@quotient+3,f
  1553  0445  0BF8               	decfsz	??___lldiv,f
  1554  0446  2C40               	goto	u375
  1555  0447                     l1265:
  1556  0447  0873               	movf	___lldiv@divisor+3,w
  1557  0448  0277               	subwf	___lldiv@dividend+3,w
  1558  0449  1D03               	skipz
  1559  044A  2C55               	goto	u385
  1560  044B  0872               	movf	___lldiv@divisor+2,w
  1561  044C  0276               	subwf	___lldiv@dividend+2,w
  1562  044D  1D03               	skipz
  1563  044E  2C55               	goto	u385
  1564  044F  0871               	movf	___lldiv@divisor+1,w
  1565  0450  0275               	subwf	___lldiv@dividend+1,w
  1566  0451  1D03               	skipz
  1567  0452  2C55               	goto	u385
  1568  0453  0870               	movf	___lldiv@divisor,w
  1569  0454  0274               	subwf	___lldiv@dividend,w
  1570  0455                     u385:
  1571  0455  1C03               	skipc
  1572  0456  2C58               	goto	u381
  1573  0457  2C59               	goto	u380
  1574  0458                     u381:
  1575  0458  2C68               	goto	l1271
  1576  0459                     u380:
  1577  0459                     l1267:
  1578  0459  0870               	movf	___lldiv@divisor,w
  1579  045A  02F4               	subwf	___lldiv@dividend,f
  1580  045B  0871               	movf	___lldiv@divisor+1,w
  1581  045C  1C03               	skipc
  1582  045D  0F71               	incfsz	___lldiv@divisor+1,w
  1583  045E  02F5               	subwf	___lldiv@dividend+1,f
  1584  045F  0872               	movf	___lldiv@divisor+2,w
  1585  0460  1C03               	skipc
  1586  0461  0F72               	incfsz	___lldiv@divisor+2,w
  1587  0462  02F6               	subwf	___lldiv@dividend+2,f
  1588  0463  0873               	movf	___lldiv@divisor+3,w
  1589  0464  1C03               	skipc
  1590  0465  0F73               	incfsz	___lldiv@divisor+3,w
  1591  0466  02F7               	subwf	___lldiv@dividend+3,f
  1592  0467                     l1269:
  1593  0467  1479               	bsf	___lldiv@quotient,0
  1594  0468                     l1271:
  1595  0468  3001               	movlw	1
  1596  0469                     u395:
  1597  0469  1003               	clrc
  1598  046A  0CF3               	rrf	___lldiv@divisor+3,f
  1599  046B  0CF2               	rrf	___lldiv@divisor+2,f
  1600  046C  0CF1               	rrf	___lldiv@divisor+1,f
  1601  046D  0CF0               	rrf	___lldiv@divisor,f
  1602  046E  3EFF               	addlw	-1
  1603  046F  1D03               	skipz
  1604  0470  2C69               	goto	u395
  1605  0471                     l1273:
  1606  0471  3001               	movlw	1
  1607  0472  02FD               	subwf	___lldiv@counter,f
  1608  0473  1D03               	btfss	3,2
  1609  0474  2C76               	goto	u401
  1610  0475  2C77               	goto	u400
  1611  0476                     u401:
  1612  0476  2C3E               	goto	l1263
  1613  0477                     u400:
  1614  0477                     l1275:
  1615  0477  087C               	movf	___lldiv@quotient+3,w
  1616  0478  00F3               	movwf	?___lldiv+3
  1617  0479  087B               	movf	___lldiv@quotient+2,w
  1618  047A  00F2               	movwf	?___lldiv+2
  1619  047B  087A               	movf	___lldiv@quotient+1,w
  1620  047C  00F1               	movwf	?___lldiv+1
  1621  047D  0879               	movf	___lldiv@quotient,w
  1622  047E  00F0               	movwf	?___lldiv
  1623  047F                     l353:
  1624  047F  0008               	return
  1625  0480                     __end_of___lldiv:
  1626                           
  1627                           	psect	text4
  1628  03D5                     __ptext4:	
  1629 ;; *************** function _conver *****************
  1630 ;; Defined at:
  1631 ;;		line 145 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  AC3             1    wreg     unsigned char 
  1634 ;;  AD3             1    0[COMMON] unsigned char 
  1635 ;;  AU3             1    1[COMMON] unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  AC3             1   16[BANK0 ] unsigned char 
  1638 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      PTR const unsigned char 
  1641 ;; Registers used:
  1642 ;;		wreg
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         2       0       0       0       0
  1649 ;;      Locals:         0      17       0       0       0
  1650 ;;      Temps:          1       0       0       0       0
  1651 ;;      Totals:         3      17       0       0       0
  1652 ;;Total ram usage:       20 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _conver
  1663  03D5                     _conver:
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _conver: [wreg]
  1667                           ;conver@AC3 stored from wreg
  1668  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1669  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1670  03D7  00C6               	movwf	conver@AC3
  1671  03D8                     l1499:
  1672                           
  1673                           ;main.c: 146:     char temporal[16];;main.c: 147:     temporal[0] = AC1;
  1674  03D8  0828               	movf	_AC1,w
  1675  03D9  00F2               	movwf	??_conver
  1676  03DA  0872               	movf	??_conver,w
  1677  03DB  00B6               	movwf	conver@temporal
  1678                           
  1679                           ;main.c: 148:     temporal[1] = 0x2E;
  1680  03DC  302E               	movlw	46
  1681  03DD  00F2               	movwf	??_conver
  1682  03DE  0872               	movf	??_conver,w
  1683  03DF  00B7               	movwf	conver@temporal+1
  1684                           
  1685                           ;main.c: 149:     temporal[2] = AD1;
  1686  03E0  0825               	movf	_AD1,w
  1687  03E1  00F2               	movwf	??_conver
  1688  03E2  0872               	movf	??_conver,w
  1689  03E3  00B8               	movwf	conver@temporal+2
  1690                           
  1691                           ;main.c: 150:     temporal[3] = AU1;
  1692  03E4  0822               	movf	_AU1,w
  1693  03E5  00F2               	movwf	??_conver
  1694  03E6  0872               	movf	??_conver,w
  1695  03E7  00B9               	movwf	conver@temporal+3
  1696                           
  1697                           ;main.c: 151:     temporal[4] = 0x76;
  1698  03E8  3076               	movlw	118
  1699  03E9  00F2               	movwf	??_conver
  1700  03EA  0872               	movf	??_conver,w
  1701  03EB  00BA               	movwf	conver@temporal+4
  1702                           
  1703                           ;main.c: 152:     temporal[5] = 0x20;
  1704  03EC  3020               	movlw	32
  1705  03ED  00F2               	movwf	??_conver
  1706  03EE  0872               	movf	??_conver,w
  1707  03EF  00BB               	movwf	conver@temporal+5
  1708                           
  1709                           ;main.c: 153:     temporal[6] = 0x20;
  1710  03F0  3020               	movlw	32
  1711  03F1  00F2               	movwf	??_conver
  1712  03F2  0872               	movf	??_conver,w
  1713  03F3  00BC               	movwf	conver@temporal+6
  1714                           
  1715                           ;main.c: 154:     temporal[7] = AD2;
  1716  03F4  0824               	movf	_AD2,w
  1717  03F5  00F2               	movwf	??_conver
  1718  03F6  0872               	movf	??_conver,w
  1719  03F7  00BD               	movwf	conver@temporal+7
  1720                           
  1721                           ;main.c: 155:     temporal[8] = AU2;
  1722  03F8  0821               	movf	_AU2,w
  1723  03F9  00F2               	movwf	??_conver
  1724  03FA  0872               	movf	??_conver,w
  1725  03FB  00BE               	movwf	conver@temporal+8
  1726                           
  1727                           ;main.c: 156:     temporal[9] = 0X20;
  1728  03FC  3020               	movlw	32
  1729  03FD  00F2               	movwf	??_conver
  1730  03FE  0872               	movf	??_conver,w
  1731  03FF  00BF               	movwf	conver@temporal+9
  1732                           
  1733                           ;main.c: 157:     temporal[10] = 0x20;
  1734  0400  3020               	movlw	32
  1735  0401  00F2               	movwf	??_conver
  1736  0402  0872               	movf	??_conver,w
  1737  0403  00C0               	movwf	conver@temporal+10
  1738                           
  1739                           ;main.c: 158:     temporal[11] = AC3;
  1740  0404  0846               	movf	conver@AC3,w
  1741  0405  00F2               	movwf	??_conver
  1742  0406  0872               	movf	??_conver,w
  1743  0407  00C1               	movwf	conver@temporal+11
  1744                           
  1745                           ;main.c: 159:     temporal[12] = AD3;
  1746  0408  0870               	movf	conver@AD3,w
  1747  0409  00F2               	movwf	??_conver
  1748  040A  0872               	movf	??_conver,w
  1749  040B  00C2               	movwf	conver@temporal+12
  1750                           
  1751                           ;main.c: 160:     temporal[13] = AU3;
  1752  040C  0871               	movf	conver@AU3,w
  1753  040D  00F2               	movwf	??_conver
  1754  040E  0872               	movf	??_conver,w
  1755  040F  00C3               	movwf	conver@temporal+13
  1756                           
  1757                           ;main.c: 161:     temporal[14] = 0xDF;
  1758  0410  30DF               	movlw	223
  1759  0411  00F2               	movwf	??_conver
  1760  0412  0872               	movf	??_conver,w
  1761  0413  00C4               	movwf	conver@temporal+14
  1762                           
  1763                           ;main.c: 162:     temporal[15] = 67;
  1764  0414  3043               	movlw	67
  1765  0415  00F2               	movwf	??_conver
  1766  0416  0872               	movf	??_conver,w
  1767  0417  00C5               	movwf	conver@temporal+15
  1768                           
  1769                           ;main.c: 163:     return temporal;
  1770  0418  3036               	movlw	(low (conver@temporal| 0))& (0+255)
  1771  0419                     l110:
  1772  0419  0008               	return
  1773  041A                     __end_of_conver:
  1774                           
  1775                           	psect	text5
  1776  0393                     __ptext5:	
  1777 ;; *************** function _Lcd_Write_String *****************
  1778 ;; Defined at:
  1779 ;;		line 54 in file "LCD.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  a               2    3[COMMON] PTR unsigned char 
  1782 ;;		 -> conver@temporal(16), STR_1(15), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  i               2    8[COMMON] int 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         2       0       0       0       0
  1795 ;;      Locals:         2       0       0       0       0
  1796 ;;      Temps:          3       0       0       0       0
  1797 ;;      Totals:         7       0       0       0       0
  1798 ;;Total ram usage:        7 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 2
  1801 ;; This function calls:
  1802 ;;		_Lcd_Write_Char
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _Lcd_Write_String
  1810  0393                     _Lcd_Write_String:
  1811  0393                     l1491:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1814                           
  1815                           
  1816                           ;LCD.c: 55:     int i;;LCD.c: 56:     for (i = 0; a[i] != '\0'; i++)
  1817  0393  01F8               	clrf	Lcd_Write_String@i
  1818  0394  01F9               	clrf	Lcd_Write_String@i+1
  1819  0395  2BB8               	goto	l1497
  1820  0396                     l1493:
  1821                           
  1822                           ;LCD.c: 57:         Lcd_Write_Char(a[i]);
  1823  0396  0878               	movf	Lcd_Write_String@i,w
  1824  0397  0773               	addwf	Lcd_Write_String@a,w
  1825  0398  00F6               	movwf	??_Lcd_Write_String+1
  1826  0399  0874               	movf	Lcd_Write_String@a+1,w
  1827  039A  00F5               	movwf	??_Lcd_Write_String
  1828  039B  1803               	skipnc
  1829  039C  0AF5               	incf	??_Lcd_Write_String,f
  1830  039D  1FF8               	btfss	Lcd_Write_String@i,7
  1831  039E  2BA0               	goto	u620
  1832  039F  03F5               	decf	??_Lcd_Write_String,f
  1833  03A0                     u620:
  1834  03A0  0875               	movf	??_Lcd_Write_String,w
  1835  03A1  00F7               	movwf	??_Lcd_Write_String+2
  1836  03A2  0877               	movf	??_Lcd_Write_String+2,w
  1837  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1838  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1839  03A5  00FF               	movwf	btemp+1
  1840  03A6  0876               	movf	??_Lcd_Write_String+1,w
  1841  03A7  0084               	movwf	4
  1842  03A8  120A  118A  2003  120A  118A  	fcall	stringtab
  1843  03AD  120A  118A  21E7  120A  118A  	fcall	_Lcd_Write_Char
  1844  03B2                     l1495:
  1845  03B2  3001               	movlw	1
  1846  03B3  07F8               	addwf	Lcd_Write_String@i,f
  1847  03B4  1803               	skipnc
  1848  03B5  0AF9               	incf	Lcd_Write_String@i+1,f
  1849  03B6  3000               	movlw	0
  1850  03B7  07F9               	addwf	Lcd_Write_String@i+1,f
  1851  03B8                     l1497:
  1852  03B8  0878               	movf	Lcd_Write_String@i,w
  1853  03B9  0773               	addwf	Lcd_Write_String@a,w
  1854  03BA  00F6               	movwf	??_Lcd_Write_String+1
  1855  03BB  0874               	movf	Lcd_Write_String@a+1,w
  1856  03BC  00F5               	movwf	??_Lcd_Write_String
  1857  03BD  1803               	skipnc
  1858  03BE  0AF5               	incf	??_Lcd_Write_String,f
  1859  03BF  1FF8               	btfss	Lcd_Write_String@i,7
  1860  03C0  2BC2               	goto	u630
  1861  03C1  03F5               	decf	??_Lcd_Write_String,f
  1862  03C2                     u630:
  1863  03C2  0875               	movf	??_Lcd_Write_String,w
  1864  03C3  00F7               	movwf	??_Lcd_Write_String+2
  1865  03C4  0877               	movf	??_Lcd_Write_String+2,w
  1866  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1867  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1868  03C7  00FF               	movwf	btemp+1
  1869  03C8  0876               	movf	??_Lcd_Write_String+1,w
  1870  03C9  0084               	movwf	4
  1871  03CA  120A  118A  2003  120A  118A  	fcall	stringtab
  1872  03CF  3A00               	xorlw	0
  1873  03D0  1D03               	skipz
  1874  03D1  2BD3               	goto	u641
  1875  03D2  2BD4               	goto	u640
  1876  03D3                     u641:
  1877  03D3  2B96               	goto	l1493
  1878  03D4                     u640:
  1879  03D4                     l209:
  1880  03D4  0008               	return
  1881  03D5                     __end_of_Lcd_Write_String:
  1882                           
  1883                           	psect	text6
  1884  01E7                     __ptext6:	
  1885 ;; *************** function _Lcd_Write_Char *****************
  1886 ;; Defined at:
  1887 ;;		line 45 in file "LCD.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  a               1    wreg     unsigned char 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  a               1    2[COMMON] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         1       0       0       0       0
  1903 ;;      Temps:          1       0       0       0       0
  1904 ;;      Totals:         2       0       0       0       0
  1905 ;;Total ram usage:        2 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 1
  1908 ;; This function calls:
  1909 ;;		_Lcd_Port
  1910 ;; This function is called by:
  1911 ;;		_Lcd_Write_String
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _Lcd_Write_Char
  1917  01E7                     _Lcd_Write_Char:
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1921                           ;Lcd_Write_Char@a stored from wreg
  1922  01E7  00F2               	movwf	Lcd_Write_Char@a
  1923  01E8                     l1383:
  1924                           
  1925                           ;LCD.c: 46:     Lcd_Port(a);
  1926  01E8  0872               	movf	Lcd_Write_Char@a,w
  1927  01E9  120A  118A  21B0  120A  118A  	fcall	_Lcd_Port
  1928  01EE                     l1385:
  1929                           
  1930                           ;LCD.c: 47:     PORTEbits.RE1 = 1;
  1931  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1932  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1933  01F0  1489               	bsf	9,1	;volatile
  1934  01F1                     l1387:
  1935                           
  1936                           ;LCD.c: 48:     PORTEbits.RE2 = 0;
  1937  01F1  1109               	bcf	9,2	;volatile
  1938  01F2                     l1389:
  1939                           
  1940                           ;LCD.c: 49:     PORTEbits.RE0 = 1;
  1941  01F2  1409               	bsf	9,0	;volatile
  1942  01F3                     l1391:
  1943                           
  1944                           ;LCD.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1945  01F3  300D               	movlw	13
  1946  01F4  00F1               	movwf	??_Lcd_Write_Char
  1947  01F5                     u737:
  1948  01F5  0BF1               	decfsz	??_Lcd_Write_Char,f
  1949  01F6  29F5               	goto	u737
  1950  01F7                     l1393:
  1951                           
  1952                           ;LCD.c: 51:     PORTEbits.RE0 = 0;
  1953  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1954  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1955  01F9  1009               	bcf	9,0	;volatile
  1956  01FA                     l203:
  1957  01FA  0008               	return
  1958  01FB                     __end_of_Lcd_Write_Char:
  1959                           
  1960                           	psect	text7
  1961  0241                     __ptext7:	
  1962 ;; *************** function _Lcd_Set_Cursor *****************
  1963 ;; Defined at:
  1964 ;;		line 20 in file "LCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  a               1    wreg     unsigned char 
  1967 ;;  b               1    4[COMMON] unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  a               1    6[COMMON] unsigned char 
  1970 ;;  temp            1    7[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         1       0       0       0       0
  1981 ;;      Locals:         2       0       0       0       0
  1982 ;;      Temps:          1       0       0       0       0
  1983 ;;      Totals:         4       0       0       0       0
  1984 ;;Total ram usage:        4 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 2
  1987 ;; This function calls:
  1988 ;;		_Lcd_Cmd
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _Lcd_Set_Cursor
  1996  0241                     _Lcd_Set_Cursor:
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2000                           ;Lcd_Set_Cursor@a stored from wreg
  2001  0241  00F6               	movwf	Lcd_Set_Cursor@a
  2002  0242                     l1479:
  2003                           
  2004                           ;LCD.c: 21:     char temp;;LCD.c: 22:     if (a == 1) {
  2005  0242  0376               	decf	Lcd_Set_Cursor@a,w
  2006  0243  1D03               	btfss	3,2
  2007  0244  2A46               	goto	u601
  2008  0245  2A47               	goto	u600
  2009  0246                     u601:
  2010  0246  2A53               	goto	l1485
  2011  0247                     u600:
  2012  0247                     l1481:
  2013                           
  2014                           ;LCD.c: 23:         temp = 0x80 + b - 1;
  2015  0247  0874               	movf	Lcd_Set_Cursor@b,w
  2016  0248  3E7F               	addlw	127
  2017  0249  00F5               	movwf	??_Lcd_Set_Cursor
  2018  024A  0875               	movf	??_Lcd_Set_Cursor,w
  2019  024B  00F7               	movwf	Lcd_Set_Cursor@temp
  2020  024C                     l1483:
  2021                           
  2022                           ;LCD.c: 24:         Lcd_Cmd(temp);
  2023  024C  0877               	movf	Lcd_Set_Cursor@temp,w
  2024  024D  120A  118A  2210  120A  118A  	fcall	_Lcd_Cmd
  2025                           
  2026                           ;LCD.c: 25:     } else if (a == 2) {
  2027  0252  2A64               	goto	l197
  2028  0253                     l1485:
  2029  0253  3002               	movlw	2
  2030  0254  0676               	xorwf	Lcd_Set_Cursor@a,w
  2031  0255  1D03               	btfss	3,2
  2032  0256  2A58               	goto	u611
  2033  0257  2A59               	goto	u610
  2034  0258                     u611:
  2035  0258  2A64               	goto	l197
  2036  0259                     u610:
  2037  0259                     l1487:
  2038                           
  2039                           ;LCD.c: 26:         temp = 0xC0 + b - 1;
  2040  0259  0874               	movf	Lcd_Set_Cursor@b,w
  2041  025A  3EBF               	addlw	191
  2042  025B  00F5               	movwf	??_Lcd_Set_Cursor
  2043  025C  0875               	movf	??_Lcd_Set_Cursor,w
  2044  025D  00F7               	movwf	Lcd_Set_Cursor@temp
  2045  025E                     l1489:
  2046                           
  2047                           ;LCD.c: 27:         Lcd_Cmd(temp);
  2048  025E  0877               	movf	Lcd_Set_Cursor@temp,w
  2049  025F  120A  118A  2210  120A  118A  	fcall	_Lcd_Cmd
  2050  0264                     l197:
  2051  0264  0008               	return
  2052  0265                     __end_of_Lcd_Set_Cursor:
  2053                           
  2054                           	psect	text8
  2055  0228                     __ptext8:	
  2056 ;; *************** function _Lcd_Init *****************
  2057 ;; Defined at:
  2058 ;;		line 31 in file "LCD.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 2
  2079 ;; This function calls:
  2080 ;;		_Lcd_Cmd
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _Lcd_Init
  2088  0228                     _Lcd_Init:
  2089  0228                     l1477:	
  2090                           ;incstack = 0
  2091                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2092                           
  2093                           
  2094                           ;LCD.c: 39:     Lcd_Cmd(0x38);
  2095  0228  3038               	movlw	56
  2096  0229  120A  118A  2210  120A  118A  	fcall	_Lcd_Cmd
  2097                           
  2098                           ;LCD.c: 40:     Lcd_Cmd(0x06);
  2099  022E  3006               	movlw	6
  2100  022F  120A  118A  2210  120A  118A  	fcall	_Lcd_Cmd
  2101                           
  2102                           ;LCD.c: 41:     Lcd_Cmd(0x0c);
  2103  0234  300C               	movlw	12
  2104  0235  120A  118A  2210  120A  118A  	fcall	_Lcd_Cmd
  2105                           
  2106                           ;LCD.c: 42:     Lcd_Cmd(0x80);
  2107  023A  3080               	movlw	128
  2108  023B  120A  118A  2210  120A  118A  	fcall	_Lcd_Cmd
  2109  0240                     l200:
  2110  0240  0008               	return
  2111  0241                     __end_of_Lcd_Init:
  2112                           
  2113                           	psect	text9
  2114  0210                     __ptext9:	
  2115 ;; *************** function _Lcd_Cmd *****************
  2116 ;; Defined at:
  2117 ;;		line 7 in file "LCD.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  a               1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  a               1    3[COMMON] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         1       0       0       0       0
  2133 ;;      Temps:          2       0       0       0       0
  2134 ;;      Totals:         3       0       0       0       0
  2135 ;;Total ram usage:        3 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 1
  2138 ;; This function calls:
  2139 ;;		_Lcd_Port
  2140 ;; This function is called by:
  2141 ;;		_Lcd_Set_Cursor
  2142 ;;		_Lcd_Init
  2143 ;;		_Lcd_Clear
  2144 ;;		_Lcd_Shift_Right
  2145 ;;		_Lcd_Shift_Left
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _Lcd_Cmd
  2151  0210                     _Lcd_Cmd:
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2155                           ;Lcd_Cmd@a stored from wreg
  2156  0210  00F3               	movwf	Lcd_Cmd@a
  2157  0211                     l1371:
  2158                           
  2159                           ;LCD.c: 8:     Lcd_Port(a);
  2160  0211  0873               	movf	Lcd_Cmd@a,w
  2161  0212  120A  118A  21B0  120A  118A  	fcall	_Lcd_Port
  2162  0217                     l1373:
  2163                           
  2164                           ;LCD.c: 9:     PORTEbits.RE1 = 0;
  2165  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0219  1089               	bcf	9,1	;volatile
  2168  021A                     l1375:
  2169                           
  2170                           ;LCD.c: 10:     PORTEbits.RE2 = 0;
  2171  021A  1109               	bcf	9,2	;volatile
  2172  021B                     l1377:
  2173                           
  2174                           ;LCD.c: 11:     PORTEbits.RE0 = 1;
  2175  021B  1409               	bsf	9,0	;volatile
  2176  021C                     l1379:
  2177                           
  2178                           ;LCD.c: 12:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2179  021C  3007               	movlw	7
  2180  021D  00F2               	movwf	??_Lcd_Cmd+1
  2181  021E  307D               	movlw	125
  2182  021F  00F1               	movwf	??_Lcd_Cmd
  2183  0220                     u747:
  2184  0220  0BF1               	decfsz	??_Lcd_Cmd,f
  2185  0221  2A20               	goto	u747
  2186  0222  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2187  0223  2A20               	goto	u747
  2188  0224                     l1381:
  2189                           
  2190                           ;LCD.c: 13:     PORTEbits.RE0 = 0;
  2191  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0226  1009               	bcf	9,0	;volatile
  2194  0227                     l188:
  2195  0227  0008               	return
  2196  0228                     __end_of_Lcd_Cmd:
  2197                           
  2198                           	psect	text10
  2199  01B0                     __ptext10:	
  2200 ;; *************** function _Lcd_Port *****************
  2201 ;; Defined at:
  2202 ;;		line 3 in file "LCD.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  a               1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  a               1    0[COMMON] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         1       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0
  2219 ;;      Totals:         1       0       0       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_Lcd_Cmd
  2226 ;;		_Lcd_Write_Char
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _Lcd_Port
  2232  01B0                     _Lcd_Port:
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _Lcd_Port: [wreg]
  2236                           ;Lcd_Port@a stored from wreg
  2237  01B0  00F0               	movwf	Lcd_Port@a
  2238  01B1                     l1253:
  2239                           
  2240                           ;LCD.c: 4:     PORTD = a;
  2241  01B1  0870               	movf	Lcd_Port@a,w
  2242  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2243  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2244  01B4  0088               	movwf	8	;volatile
  2245  01B5                     l185:
  2246  01B5  0008               	return
  2247  01B6                     __end_of_Lcd_Port:
  2248                           
  2249                           	psect	text11
  2250  0597                     __ptext11:	
  2251 ;; *************** function _LECT3 *****************
  2252 ;; Defined at:
  2253 ;;		line 179 in file "main.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0
  2269 ;;      Temps:          0       4       0       0       0
  2270 ;;      Totals:         0       4       0       0       0
  2271 ;;Total ram usage:        4 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 1
  2274 ;; This function calls:
  2275 ;;		___awdiv
  2276 ;;		___bmul
  2277 ;;		___wmul
  2278 ;;		_num_ascii
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _LECT3
  2286  0597                     _LECT3:
  2287  0597                     l1517:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _LECT3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2290                           
  2291                           
  2292                           ;main.c: 180:     if (TEMP>=68){
  2293  0597  3044               	movlw	68
  2294  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2296  059A  0234               	subwf	_TEMP,w
  2297  059B  1C03               	skipc
  2298  059C  2D9E               	goto	u651
  2299  059D  2D9F               	goto	u650
  2300  059E                     u651:
  2301  059E  2E41               	goto	l1527
  2302  059F                     u650:
  2303  059F                     l1519:
  2304                           
  2305                           ;main.c: 181:         NUM = 24*TEMP/35-1632/35;
  2306  059F  3023               	movlw	35
  2307  05A0  00F6               	movwf	___awdiv@divisor
  2308  05A1  3000               	movlw	0
  2309  05A2  00F7               	movwf	___awdiv@divisor+1
  2310  05A3  0834               	movf	_TEMP,w
  2311  05A4  00BA               	movwf	??_LECT3
  2312  05A5  01BB               	clrf	??_LECT3+1
  2313  05A6  083A               	movf	??_LECT3,w
  2314  05A7  00F0               	movwf	___wmul@multiplier
  2315  05A8  083B               	movf	??_LECT3+1,w
  2316  05A9  00F1               	movwf	___wmul@multiplier+1
  2317  05AA  3018               	movlw	24
  2318  05AB  00F2               	movwf	___wmul@multiplicand
  2319  05AC  3000               	movlw	0
  2320  05AD  00F3               	movwf	___wmul@multiplicand+1
  2321  05AE  120A  118A  2265  120A  118A  	fcall	___wmul
  2322  05B3  0871               	movf	?___wmul+1,w
  2323  05B4  00F9               	movwf	___awdiv@dividend+1
  2324  05B5  0870               	movf	?___wmul,w
  2325  05B6  00F8               	movwf	___awdiv@dividend
  2326  05B7  120A  118A  2480  120A  118A  	fcall	___awdiv
  2327  05BC  0876               	movf	?___awdiv,w
  2328  05BD  3ED2               	addlw	210
  2329  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2330  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2331  05C0  00BC               	movwf	??_LECT3+2
  2332  05C1  083C               	movf	??_LECT3+2,w
  2333  05C2  00B2               	movwf	_NUM
  2334                           
  2335                           ;main.c: 182:         Cen3 = NUM/100;
  2336  05C3  3064               	movlw	100
  2337  05C4  00F6               	movwf	___awdiv@divisor
  2338  05C5  3000               	movlw	0
  2339  05C6  00F7               	movwf	___awdiv@divisor+1
  2340  05C7  0832               	movf	_NUM,w
  2341  05C8  00BA               	movwf	??_LECT3
  2342  05C9  01BB               	clrf	??_LECT3+1
  2343  05CA  083A               	movf	??_LECT3,w
  2344  05CB  00F8               	movwf	___awdiv@dividend
  2345  05CC  083B               	movf	??_LECT3+1,w
  2346  05CD  00F9               	movwf	___awdiv@dividend+1
  2347  05CE  120A  118A  2480  120A  118A  	fcall	___awdiv
  2348  05D3  0876               	movf	?___awdiv,w
  2349  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2350  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2351  05D6  00BC               	movwf	??_LECT3+2
  2352  05D7  083C               	movf	??_LECT3+2,w
  2353  05D8  00AF               	movwf	_Cen3
  2354                           
  2355                           ;main.c: 183:         Dec3 = (NUM-Cen3*100)/10;
  2356  05D9  300A               	movlw	10
  2357  05DA  00F6               	movwf	___awdiv@divisor
  2358  05DB  3000               	movlw	0
  2359  05DC  00F7               	movwf	___awdiv@divisor+1
  2360  05DD  082F               	movf	_Cen3,w
  2361  05DE  00BA               	movwf	??_LECT3
  2362  05DF  01BB               	clrf	??_LECT3+1
  2363  05E0  083A               	movf	??_LECT3,w
  2364  05E1  00F0               	movwf	___wmul@multiplier
  2365  05E2  083B               	movf	??_LECT3+1,w
  2366  05E3  00F1               	movwf	___wmul@multiplier+1
  2367  05E4  309C               	movlw	156
  2368  05E5  00F2               	movwf	___wmul@multiplicand
  2369  05E6  30FF               	movlw	255
  2370  05E7  00F3               	movwf	___wmul@multiplicand+1
  2371  05E8  120A  118A  2265  120A  118A  	fcall	___wmul
  2372  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2373  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2374  05EF  0832               	movf	_NUM,w
  2375  05F0  0770               	addwf	?___wmul,w
  2376  05F1  00F8               	movwf	___awdiv@dividend
  2377  05F2  0871               	movf	?___wmul+1,w
  2378  05F3  1803               	skipnc
  2379  05F4  0A71               	incf	?___wmul+1,w
  2380  05F5  00F9               	movwf	___awdiv@dividend+1
  2381  05F6  120A  118A  2480  120A  118A  	fcall	___awdiv
  2382  05FB  0876               	movf	?___awdiv,w
  2383  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2384  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2385  05FE  00BC               	movwf	??_LECT3+2
  2386  05FF  083C               	movf	??_LECT3+2,w
  2387  0600  00AC               	movwf	_Dec3
  2388                           
  2389                           ;main.c: 184:         Un3 = NUM-Cen3*100-Dec3*10;
  2390  0601  309C               	movlw	156
  2391  0602  00BA               	movwf	??_LECT3
  2392  0603  083A               	movf	??_LECT3,w
  2393  0604  00F0               	movwf	___bmul@multiplicand
  2394  0605  082F               	movf	_Cen3,w
  2395  0606  120A  118A  21FB  120A  118A  	fcall	___bmul
  2396  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2397  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2398  060D  00BB               	movwf	??_LECT3+1
  2399  060E  30F6               	movlw	246
  2400  060F  00BC               	movwf	??_LECT3+2
  2401  0610  083C               	movf	??_LECT3+2,w
  2402  0611  00F0               	movwf	___bmul@multiplicand
  2403  0612  082C               	movf	_Dec3,w
  2404  0613  120A  118A  21FB  120A  118A  	fcall	___bmul
  2405  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2407  061A  073B               	addwf	??_LECT3+1,w
  2408  061B  0732               	addwf	_NUM,w
  2409  061C  00BD               	movwf	??_LECT3+3
  2410  061D  083D               	movf	??_LECT3+3,w
  2411  061E  00A9               	movwf	_Un3
  2412  061F                     l1521:
  2413                           
  2414                           ;main.c: 185:         AC3 = num_ascii(Cen3);
  2415  061F  082F               	movf	_Cen3,w
  2416  0620  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2417  0625  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0626  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0627  00BA               	movwf	??_LECT3
  2420  0628  083A               	movf	??_LECT3,w
  2421  0629  00A6               	movwf	_AC3
  2422  062A                     l1523:
  2423                           
  2424                           ;main.c: 186:         AD3 = num_ascii(Dec3);
  2425  062A  082C               	movf	_Dec3,w
  2426  062B  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2427  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0632  00BA               	movwf	??_LECT3
  2430  0633  083A               	movf	??_LECT3,w
  2431  0634  00A3               	movwf	_AD3
  2432  0635                     l1525:
  2433                           
  2434                           ;main.c: 187:         AU3 = num_ascii(Un3);
  2435  0635  0829               	movf	_Un3,w
  2436  0636  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2437  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2438  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2439  063D  00BA               	movwf	??_LECT3
  2440  063E  083A               	movf	??_LECT3,w
  2441  063F  00A0               	movwf	_AU3
  2442                           
  2443                           ;main.c: 188:     }
  2444  0640  2EA5               	goto	l121
  2445  0641                     l1527:
  2446                           
  2447                           ;main.c: 190:         NUM = (877/19)-13*TEMP/19;
  2448  0641  3013               	movlw	19
  2449  0642  00F6               	movwf	___awdiv@divisor
  2450  0643  3000               	movlw	0
  2451  0644  00F7               	movwf	___awdiv@divisor+1
  2452  0645  0834               	movf	_TEMP,w
  2453  0646  00BA               	movwf	??_LECT3
  2454  0647  01BB               	clrf	??_LECT3+1
  2455  0648  083A               	movf	??_LECT3,w
  2456  0649  00F0               	movwf	___wmul@multiplier
  2457  064A  083B               	movf	??_LECT3+1,w
  2458  064B  00F1               	movwf	___wmul@multiplier+1
  2459  064C  300D               	movlw	13
  2460  064D  00F2               	movwf	___wmul@multiplicand
  2461  064E  3000               	movlw	0
  2462  064F  00F3               	movwf	___wmul@multiplicand+1
  2463  0650  120A  118A  2265  120A  118A  	fcall	___wmul
  2464  0655  0871               	movf	?___wmul+1,w
  2465  0656  00F9               	movwf	___awdiv@dividend+1
  2466  0657  0870               	movf	?___wmul,w
  2467  0658  00F8               	movwf	___awdiv@dividend
  2468  0659  120A  118A  2480  120A  118A  	fcall	___awdiv
  2469  065E  0876               	movf	?___awdiv,w
  2470  065F  3C2E               	sublw	46
  2471  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0662  00BC               	movwf	??_LECT3+2
  2474  0663  083C               	movf	??_LECT3+2,w
  2475  0664  00B2               	movwf	_NUM
  2476  0665                     l1529:
  2477                           
  2478                           ;main.c: 191:         AC3 = 0x2D;
  2479  0665  302D               	movlw	45
  2480  0666  00BA               	movwf	??_LECT3
  2481  0667  083A               	movf	??_LECT3,w
  2482  0668  00A6               	movwf	_AC3
  2483  0669                     l1531:
  2484                           
  2485                           ;main.c: 192:         Dec3 = NUM/10;
  2486  0669  300A               	movlw	10
  2487  066A  00F6               	movwf	___awdiv@divisor
  2488  066B  3000               	movlw	0
  2489  066C  00F7               	movwf	___awdiv@divisor+1
  2490  066D  0832               	movf	_NUM,w
  2491  066E  00BA               	movwf	??_LECT3
  2492  066F  01BB               	clrf	??_LECT3+1
  2493  0670  083A               	movf	??_LECT3,w
  2494  0671  00F8               	movwf	___awdiv@dividend
  2495  0672  083B               	movf	??_LECT3+1,w
  2496  0673  00F9               	movwf	___awdiv@dividend+1
  2497  0674  120A  118A  2480  120A  118A  	fcall	___awdiv
  2498  0679  0876               	movf	?___awdiv,w
  2499  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2500  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2501  067C  00BC               	movwf	??_LECT3+2
  2502  067D  083C               	movf	??_LECT3+2,w
  2503  067E  00AC               	movwf	_Dec3
  2504  067F                     l1533:
  2505                           
  2506                           ;main.c: 193:         Un3 = NUM - Dec3*10;
  2507  067F  30F6               	movlw	246
  2508  0680  00BA               	movwf	??_LECT3
  2509  0681  083A               	movf	??_LECT3,w
  2510  0682  00F0               	movwf	___bmul@multiplicand
  2511  0683  082C               	movf	_Dec3,w
  2512  0684  120A  118A  21FB  120A  118A  	fcall	___bmul
  2513  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2514  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2515  068B  0732               	addwf	_NUM,w
  2516  068C  00BB               	movwf	??_LECT3+1
  2517  068D  083B               	movf	??_LECT3+1,w
  2518  068E  00A9               	movwf	_Un3
  2519  068F                     l1535:
  2520                           
  2521                           ;main.c: 194:         AD3 = num_ascii(Dec3);
  2522  068F  082C               	movf	_Dec3,w
  2523  0690  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2524  0695  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0696  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0697  00BA               	movwf	??_LECT3
  2527  0698  083A               	movf	??_LECT3,w
  2528  0699  00A3               	movwf	_AD3
  2529  069A                     l1537:
  2530                           
  2531                           ;main.c: 195:         AU3 = num_ascii(Un3);
  2532  069A  0829               	movf	_Un3,w
  2533  069B  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2534  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2535  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2536  06A2  00BA               	movwf	??_LECT3
  2537  06A3  083A               	movf	??_LECT3,w
  2538  06A4  00A0               	movwf	_AU3
  2539  06A5                     l121:
  2540  06A5  0008               	return
  2541  06A6                     __end_of_LECT3:
  2542                           
  2543                           	psect	text12
  2544  0354                     __ptext12:	
  2545 ;; *************** function _LECT2 *****************
  2546 ;; Defined at:
  2547 ;;		line 173 in file "main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          3       0       0       0       0
  2564 ;;      Totals:         3       0       0       0       0
  2565 ;;Total ram usage:        3 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 1
  2568 ;; This function calls:
  2569 ;;		___awdiv
  2570 ;;		___bmul
  2571 ;;		_num_ascii
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _LECT2
  2579  0354                     _LECT2:
  2580  0354                     l1511:	
  2581                           ;incstack = 0
  2582                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2583                           
  2584                           
  2585                           ;main.c: 174:     Dec2 = CONT/10;
  2586  0354  300A               	movlw	10
  2587  0355  00F6               	movwf	___awdiv@divisor
  2588  0356  3000               	movlw	0
  2589  0357  00F7               	movwf	___awdiv@divisor+1
  2590  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2592  035A  0833               	movf	_CONT,w
  2593  035B  00FB               	movwf	??_LECT2
  2594  035C  01FC               	clrf	??_LECT2+1
  2595  035D  087B               	movf	??_LECT2,w
  2596  035E  00F8               	movwf	___awdiv@dividend
  2597  035F  087C               	movf	??_LECT2+1,w
  2598  0360  00F9               	movwf	___awdiv@dividend+1
  2599  0361  120A  118A  2480  120A  118A  	fcall	___awdiv
  2600  0366  0876               	movf	?___awdiv,w
  2601  0367  00FD               	movwf	??_LECT2+2
  2602  0368  087D               	movf	??_LECT2+2,w
  2603  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2604  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2605  036B  00AD               	movwf	_Dec2
  2606                           
  2607                           ;main.c: 175:     Un2 = CONT-Dec2*10;
  2608  036C  30F6               	movlw	246
  2609  036D  00FB               	movwf	??_LECT2
  2610  036E  087B               	movf	??_LECT2,w
  2611  036F  00F0               	movwf	___bmul@multiplicand
  2612  0370  082D               	movf	_Dec2,w
  2613  0371  120A  118A  21FB  120A  118A  	fcall	___bmul
  2614  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0378  0733               	addwf	_CONT,w
  2617  0379  00FC               	movwf	??_LECT2+1
  2618  037A  087C               	movf	??_LECT2+1,w
  2619  037B  00AA               	movwf	_Un2
  2620  037C                     l1513:
  2621                           
  2622                           ;main.c: 176:     AD2 = num_ascii(Dec2);
  2623  037C  082D               	movf	_Dec2,w
  2624  037D  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2625  0382  00FB               	movwf	??_LECT2
  2626  0383  087B               	movf	??_LECT2,w
  2627  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0386  00A4               	movwf	_AD2
  2630  0387                     l1515:
  2631                           
  2632                           ;main.c: 177:     AU2 = num_ascii(Un2);
  2633  0387  082A               	movf	_Un2,w
  2634  0388  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2635  038D  00FB               	movwf	??_LECT2
  2636  038E  087B               	movf	??_LECT2,w
  2637  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0391  00A1               	movwf	_AU2
  2640  0392                     l116:
  2641  0392  0008               	return
  2642  0393                     __end_of_LECT2:
  2643                           
  2644                           	psect	text13
  2645  04E9                     __ptext13:	
  2646 ;; *************** function _LECT1 *****************
  2647 ;; Defined at:
  2648 ;;		line 165 in file "main.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0
  2664 ;;      Temps:          0       8       0       0       0
  2665 ;;      Totals:         0       8       0       0       0
  2666 ;;Total ram usage:        8 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 1
  2669 ;; This function calls:
  2670 ;;		___awdiv
  2671 ;;		___bmul
  2672 ;;		___wmul
  2673 ;;		_num_ascii
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _LECT1
  2681  04E9                     _LECT1:
  2682  04E9                     l1503:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2685                           
  2686                           
  2687                           ;main.c: 166:     Cen1 = POT/51;
  2688  04E9  3033               	movlw	51
  2689  04EA  00F6               	movwf	___awdiv@divisor
  2690  04EB  3000               	movlw	0
  2691  04EC  00F7               	movwf	___awdiv@divisor+1
  2692  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2693  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2694  04EF  0835               	movf	_POT,w
  2695  04F0  00BA               	movwf	??_LECT1
  2696  04F1  01BB               	clrf	??_LECT1+1
  2697  04F2  083A               	movf	??_LECT1,w
  2698  04F3  00F8               	movwf	___awdiv@dividend
  2699  04F4  083B               	movf	??_LECT1+1,w
  2700  04F5  00F9               	movwf	___awdiv@dividend+1
  2701  04F6  120A  118A  2480  120A  118A  	fcall	___awdiv
  2702  04FB  0876               	movf	?___awdiv,w
  2703  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2704  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2705  04FE  00BC               	movwf	??_LECT1+2
  2706  04FF  083C               	movf	??_LECT1+2,w
  2707  0500  00B1               	movwf	_Cen1
  2708                           
  2709                           ;main.c: 167:     Dec1 = ((10*POT)/51-Cen1*10);
  2710  0501  3033               	movlw	51
  2711  0502  00F6               	movwf	___awdiv@divisor
  2712  0503  3000               	movlw	0
  2713  0504  00F7               	movwf	___awdiv@divisor+1
  2714  0505  0835               	movf	_POT,w
  2715  0506  00BA               	movwf	??_LECT1
  2716  0507  01BB               	clrf	??_LECT1+1
  2717  0508  083A               	movf	??_LECT1,w
  2718  0509  00F0               	movwf	___wmul@multiplier
  2719  050A  083B               	movf	??_LECT1+1,w
  2720  050B  00F1               	movwf	___wmul@multiplier+1
  2721  050C  300A               	movlw	10
  2722  050D  00F2               	movwf	___wmul@multiplicand
  2723  050E  3000               	movlw	0
  2724  050F  00F3               	movwf	___wmul@multiplicand+1
  2725  0510  120A  118A  2265  120A  118A  	fcall	___wmul
  2726  0515  0871               	movf	?___wmul+1,w
  2727  0516  00F9               	movwf	___awdiv@dividend+1
  2728  0517  0870               	movf	?___wmul,w
  2729  0518  00F8               	movwf	___awdiv@dividend
  2730  0519  120A  118A  2480  120A  118A  	fcall	___awdiv
  2731  051E  0876               	movf	?___awdiv,w
  2732  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0521  00BC               	movwf	??_LECT1+2
  2735  0522  0877               	movf	?___awdiv+1,w
  2736  0523  00BD               	movwf	??_LECT1+3
  2737  0524  30F6               	movlw	246
  2738  0525  00BE               	movwf	??_LECT1+4
  2739  0526  083E               	movf	??_LECT1+4,w
  2740  0527  00F0               	movwf	___bmul@multiplicand
  2741  0528  0831               	movf	_Cen1,w
  2742  0529  120A  118A  21FB  120A  118A  	fcall	___bmul
  2743  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2744  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0530  073C               	addwf	??_LECT1+2,w
  2746  0531  00BF               	movwf	??_LECT1+5
  2747  0532  083F               	movf	??_LECT1+5,w
  2748  0533  00AE               	movwf	_Dec1
  2749                           
  2750                           ;main.c: 168:     Un1 = (100*POT)/51-(Cen1*100+Dec1*10);
  2751  0534  3033               	movlw	51
  2752  0535  00F6               	movwf	___awdiv@divisor
  2753  0536  3000               	movlw	0
  2754  0537  00F7               	movwf	___awdiv@divisor+1
  2755  0538  0835               	movf	_POT,w
  2756  0539  00BA               	movwf	??_LECT1
  2757  053A  01BB               	clrf	??_LECT1+1
  2758  053B  083A               	movf	??_LECT1,w
  2759  053C  00F0               	movwf	___wmul@multiplier
  2760  053D  083B               	movf	??_LECT1+1,w
  2761  053E  00F1               	movwf	___wmul@multiplier+1
  2762  053F  3064               	movlw	100
  2763  0540  00F2               	movwf	___wmul@multiplicand
  2764  0541  3000               	movlw	0
  2765  0542  00F3               	movwf	___wmul@multiplicand+1
  2766  0543  120A  118A  2265  120A  118A  	fcall	___wmul
  2767  0548  0871               	movf	?___wmul+1,w
  2768  0549  00F9               	movwf	___awdiv@dividend+1
  2769  054A  0870               	movf	?___wmul,w
  2770  054B  00F8               	movwf	___awdiv@dividend
  2771  054C  120A  118A  2480  120A  118A  	fcall	___awdiv
  2772  0551  0876               	movf	?___awdiv,w
  2773  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0554  00BC               	movwf	??_LECT1+2
  2776  0555  0877               	movf	?___awdiv+1,w
  2777  0556  00BD               	movwf	??_LECT1+3
  2778  0557  309C               	movlw	156
  2779  0558  00BE               	movwf	??_LECT1+4
  2780  0559  083E               	movf	??_LECT1+4,w
  2781  055A  00F0               	movwf	___bmul@multiplicand
  2782  055B  0831               	movf	_Cen1,w
  2783  055C  120A  118A  21FB  120A  118A  	fcall	___bmul
  2784  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0563  00BF               	movwf	??_LECT1+5
  2787  0564  30F6               	movlw	246
  2788  0565  00C0               	movwf	??_LECT1+6
  2789  0566  0840               	movf	??_LECT1+6,w
  2790  0567  00F0               	movwf	___bmul@multiplicand
  2791  0568  082E               	movf	_Dec1,w
  2792  0569  120A  118A  21FB  120A  118A  	fcall	___bmul
  2793  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2794  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0570  073F               	addwf	??_LECT1+5,w
  2796  0571  073C               	addwf	??_LECT1+2,w
  2797  0572  00C1               	movwf	??_LECT1+7
  2798  0573  0841               	movf	??_LECT1+7,w
  2799  0574  00AB               	movwf	_Un1
  2800  0575                     l1505:
  2801                           
  2802                           ;main.c: 169:     AC1 = num_ascii(Cen1);
  2803  0575  0831               	movf	_Cen1,w
  2804  0576  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2805  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2806  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2807  057D  00BA               	movwf	??_LECT1
  2808  057E  083A               	movf	??_LECT1,w
  2809  057F  00A8               	movwf	_AC1
  2810  0580                     l1507:
  2811                           
  2812                           ;main.c: 170:     AD1 = num_ascii(Dec1);
  2813  0580  082E               	movf	_Dec1,w
  2814  0581  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2815  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0588  00BA               	movwf	??_LECT1
  2818  0589  083A               	movf	??_LECT1,w
  2819  058A  00A5               	movwf	_AD1
  2820  058B                     l1509:
  2821                           
  2822                           ;main.c: 171:     AU1 = num_ascii(Un1);
  2823  058B  082B               	movf	_Un1,w
  2824  058C  120A  118A  2315  120A  118A  	fcall	_num_ascii
  2825  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0593  00BA               	movwf	??_LECT1
  2828  0594  083A               	movf	??_LECT1,w
  2829  0595  00A2               	movwf	_AU1
  2830  0596                     l113:
  2831  0596  0008               	return
  2832  0597                     __end_of_LECT1:
  2833                           
  2834                           	psect	text14
  2835  0315                     __ptext14:	
  2836 ;; *************** function _num_ascii *****************
  2837 ;; Defined at:
  2838 ;;		line 3 in file "ASCII_2.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  num             1    wreg     unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  num             1    2[COMMON] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      unsigned char 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         1       0       0       0       0
  2854 ;;      Temps:          2       0       0       0       0
  2855 ;;      Totals:         3       0       0       0       0
  2856 ;;Total ram usage:        3 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_LECT1
  2862 ;;		_LECT2
  2863 ;;		_LECT3
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           
  2868                           ;psect for function _num_ascii
  2869  0315                     _num_ascii:
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  2873                           ;num_ascii@num stored from wreg
  2874  0315  00F2               	movwf	num_ascii@num
  2875  0316                     l1291:
  2876                           
  2877                           ;ASCII_2.c: 4:  switch(num){
  2878  0316  2B2B               	goto	l1361
  2879  0317                     l1293:
  2880                           
  2881                           ;ASCII_2.c: 6:   return 0x30;
  2882  0317  3030               	movlw	48
  2883  0318  2B53               	goto	l220
  2884  0319                     l1305:
  2885                           
  2886                           ;ASCII_2.c: 14:   return 0x31;
  2887  0319  3031               	movlw	49
  2888  031A  2B53               	goto	l220
  2889  031B                     l1311:
  2890                           
  2891                           ;ASCII_2.c: 18:   return 0x32;
  2892  031B  3032               	movlw	50
  2893  031C  2B53               	goto	l220
  2894  031D                     l1317:
  2895                           
  2896                           ;ASCII_2.c: 22:   return 0x33;
  2897  031D  3033               	movlw	51
  2898  031E  2B53               	goto	l220
  2899  031F                     l1323:
  2900                           
  2901                           ;ASCII_2.c: 26:   return 0x34;
  2902  031F  3034               	movlw	52
  2903  0320  2B53               	goto	l220
  2904  0321                     l1329:
  2905                           
  2906                           ;ASCII_2.c: 30:   return 0x35;
  2907  0321  3035               	movlw	53
  2908  0322  2B53               	goto	l220
  2909  0323                     l1335:
  2910                           
  2911                           ;ASCII_2.c: 34:   return 0x36;
  2912  0323  3036               	movlw	54
  2913  0324  2B53               	goto	l220
  2914  0325                     l1341:
  2915                           
  2916                           ;ASCII_2.c: 38:   return 0x37;
  2917  0325  3037               	movlw	55
  2918  0326  2B53               	goto	l220
  2919  0327                     l1347:
  2920                           
  2921                           ;ASCII_2.c: 42:   return 0x38;
  2922  0327  3038               	movlw	56
  2923  0328  2B53               	goto	l220
  2924  0329                     l1353:
  2925                           
  2926                           ;ASCII_2.c: 46:   return 0x39;
  2927  0329  3039               	movlw	57
  2928  032A  2B53               	goto	l220
  2929  032B                     l1361:
  2930  032B  0872               	movf	num_ascii@num,w
  2931  032C  00F0               	movwf	??_num_ascii
  2932  032D  01F1               	clrf	??_num_ascii+1
  2933                           
  2934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2935                           ; Switch size 1, requested type "simple"
  2936                           ; Number of cases is 1, Range of values is 0 to 0
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            4     3 (average)
  2940                           ; direct_byte           11     8 (fixed)
  2941                           ; jumptable            260     6 (fixed)
  2942                           ;	Chosen strategy is simple_byte
  2943  032E  0871               	movf	??_num_ascii+1,w
  2944  032F  3A00               	xorlw	0	; case 0
  2945  0330  1903               	skipnz
  2946  0331  2B33               	goto	l1669
  2947  0332  2B17               	goto	l1293
  2948  0333                     l1669:
  2949                           
  2950                           ; Switch size 1, requested type "simple"
  2951                           ; Number of cases is 10, Range of values is 0 to 9
  2952                           ; switch strategies available:
  2953                           ; Name         Instructions Cycles
  2954                           ; simple_byte           31    16 (average)
  2955                           ; direct_byte           38     8 (fixed)
  2956                           ; jumptable            260     6 (fixed)
  2957                           ;	Chosen strategy is simple_byte
  2958  0333  0870               	movf	??_num_ascii,w
  2959  0334  3A00               	xorlw	0	; case 0
  2960  0335  1903               	skipnz
  2961  0336  2B17               	goto	l1293
  2962  0337  3A01               	xorlw	1	; case 1
  2963  0338  1903               	skipnz
  2964  0339  2B19               	goto	l1305
  2965  033A  3A03               	xorlw	3	; case 2
  2966  033B  1903               	skipnz
  2967  033C  2B1B               	goto	l1311
  2968  033D  3A01               	xorlw	1	; case 3
  2969  033E  1903               	skipnz
  2970  033F  2B1D               	goto	l1317
  2971  0340  3A07               	xorlw	7	; case 4
  2972  0341  1903               	skipnz
  2973  0342  2B1F               	goto	l1323
  2974  0343  3A01               	xorlw	1	; case 5
  2975  0344  1903               	skipnz
  2976  0345  2B21               	goto	l1329
  2977  0346  3A03               	xorlw	3	; case 6
  2978  0347  1903               	skipnz
  2979  0348  2B23               	goto	l1335
  2980  0349  3A01               	xorlw	1	; case 7
  2981  034A  1903               	skipnz
  2982  034B  2B25               	goto	l1341
  2983  034C  3A0F               	xorlw	15	; case 8
  2984  034D  1903               	skipnz
  2985  034E  2B27               	goto	l1347
  2986  034F  3A01               	xorlw	1	; case 9
  2987  0350  1903               	skipnz
  2988  0351  2B29               	goto	l1353
  2989  0352  2B17               	goto	l1293
  2990  0353                     l220:
  2991  0353  0008               	return
  2992  0354                     __end_of_num_ascii:
  2993                           
  2994                           	psect	text15
  2995  0265                     __ptext15:	
  2996 ;; *************** function ___wmul *****************
  2997 ;; Defined at:
  2998 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  multiplier      2    0[COMMON] unsigned int 
  3001 ;;  multiplicand    2    2[COMMON] unsigned int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  product         2    4[COMMON] unsigned int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2    0[COMMON] unsigned int 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         4       0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0
  3016 ;;      Totals:         6       0       0       0       0
  3017 ;;Total ram usage:        6 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_LECT1
  3023 ;;		_LECT3
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function ___wmul
  3029  0265                     ___wmul:
  3030  0265                     l1395:	
  3031                           ;incstack = 0
  3032                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3033                           
  3034  0265  01F4               	clrf	___wmul@product
  3035  0266  01F5               	clrf	___wmul@product+1
  3036  0267                     l1397:
  3037  0267  1C70               	btfss	___wmul@multiplier,0
  3038  0268  2A6A               	goto	u441
  3039  0269  2A6B               	goto	u440
  3040  026A                     u441:
  3041  026A  2A71               	goto	l317
  3042  026B                     u440:
  3043  026B                     l1399:
  3044  026B  0872               	movf	___wmul@multiplicand,w
  3045  026C  07F4               	addwf	___wmul@product,f
  3046  026D  1803               	skipnc
  3047  026E  0AF5               	incf	___wmul@product+1,f
  3048  026F  0873               	movf	___wmul@multiplicand+1,w
  3049  0270  07F5               	addwf	___wmul@product+1,f
  3050  0271                     l317:
  3051  0271  3001               	movlw	1
  3052  0272                     u455:
  3053  0272  1003               	clrc
  3054  0273  0DF2               	rlf	___wmul@multiplicand,f
  3055  0274  0DF3               	rlf	___wmul@multiplicand+1,f
  3056  0275  3EFF               	addlw	-1
  3057  0276  1D03               	skipz
  3058  0277  2A72               	goto	u455
  3059  0278                     l1401:
  3060  0278  3001               	movlw	1
  3061  0279                     u465:
  3062  0279  1003               	clrc
  3063  027A  0CF1               	rrf	___wmul@multiplier+1,f
  3064  027B  0CF0               	rrf	___wmul@multiplier,f
  3065  027C  3EFF               	addlw	-1
  3066  027D  1D03               	skipz
  3067  027E  2A79               	goto	u465
  3068  027F                     l1403:
  3069  027F  0870               	movf	___wmul@multiplier,w
  3070  0280  0471               	iorwf	___wmul@multiplier+1,w
  3071  0281  1D03               	btfss	3,2
  3072  0282  2A84               	goto	u471
  3073  0283  2A85               	goto	u470
  3074  0284                     u471:
  3075  0284  2A67               	goto	l1397
  3076  0285                     u470:
  3077  0285                     l1405:
  3078  0285  0875               	movf	___wmul@product+1,w
  3079  0286  00F1               	movwf	?___wmul+1
  3080  0287  0874               	movf	___wmul@product,w
  3081  0288  00F0               	movwf	?___wmul
  3082  0289                     l319:
  3083  0289  0008               	return
  3084  028A                     __end_of___wmul:
  3085                           
  3086                           	psect	text16
  3087  01FB                     __ptext16:	
  3088 ;; *************** function ___bmul *****************
  3089 ;; Defined at:
  3090 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  multiplier      1    wreg     unsigned char 
  3093 ;;  multiplicand    1    0[COMMON] unsigned char 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  multiplier      1    3[COMMON] unsigned char 
  3096 ;;  product         1    2[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      unsigned char 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         1       0       0       0       0
  3107 ;;      Locals:         2       0       0       0       0
  3108 ;;      Temps:          1       0       0       0       0
  3109 ;;      Totals:         4       0       0       0       0
  3110 ;;Total ram usage:        4 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_LECT1
  3116 ;;		_LECT2
  3117 ;;		_LECT3
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function ___bmul
  3123  01FB                     ___bmul:
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3127                           ;___bmul@multiplier stored from wreg
  3128  01FB  00F3               	movwf	___bmul@multiplier
  3129  01FC                     l1409:
  3130  01FC  01F2               	clrf	___bmul@product
  3131  01FD                     l1411:
  3132  01FD  1C73               	btfss	___bmul@multiplier,0
  3133  01FE  2A00               	goto	u481
  3134  01FF  2A01               	goto	u480
  3135  0200                     u481:
  3136  0200  2A05               	goto	l1415
  3137  0201                     u480:
  3138  0201                     l1413:
  3139  0201  0870               	movf	___bmul@multiplicand,w
  3140  0202  00F1               	movwf	??___bmul
  3141  0203  0871               	movf	??___bmul,w
  3142  0204  07F2               	addwf	___bmul@product,f
  3143  0205                     l1415:
  3144  0205  1003               	clrc
  3145  0206  0DF0               	rlf	___bmul@multiplicand,f
  3146  0207                     l1417:
  3147  0207  1003               	clrc
  3148  0208  0CF3               	rrf	___bmul@multiplier,f
  3149  0209  0873               	movf	___bmul@multiplier,w
  3150  020A  1D03               	btfss	3,2
  3151  020B  2A0D               	goto	u491
  3152  020C  2A0E               	goto	u490
  3153  020D                     u491:
  3154  020D  29FD               	goto	l1411
  3155  020E                     u490:
  3156  020E                     l1419:
  3157  020E  0872               	movf	___bmul@product,w
  3158  020F                     l343:
  3159  020F  0008               	return
  3160  0210                     __end_of___bmul:
  3161                           
  3162                           	psect	text17
  3163  0480                     __ptext17:	
  3164 ;; *************** function ___awdiv *****************
  3165 ;; Defined at:
  3166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  divisor         2    6[COMMON] int 
  3169 ;;  dividend        2    8[COMMON] int 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  quotient        2    2[BANK0 ] int 
  3172 ;;  sign            1    1[BANK0 ] unsigned char 
  3173 ;;  counter         1    0[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2    6[COMMON] int 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         4       0       0       0       0
  3184 ;;      Locals:         0       4       0       0       0
  3185 ;;      Temps:          1       0       0       0       0
  3186 ;;      Totals:         5       4       0       0       0
  3187 ;;Total ram usage:        9 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_LECT1
  3193 ;;		_LECT2
  3194 ;;		_LECT3
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function ___awdiv
  3200  0480                     ___awdiv:
  3201  0480                     l1423:	
  3202                           ;incstack = 0
  3203                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3204                           
  3205  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0482  01B7               	clrf	___awdiv@sign
  3208  0483                     l1425:
  3209  0483  1FF7               	btfss	___awdiv@divisor+1,7
  3210  0484  2C86               	goto	u501
  3211  0485  2C87               	goto	u500
  3212  0486                     u501:
  3213  0486  2C8E               	goto	l1431
  3214  0487                     u500:
  3215  0487                     l1427:
  3216  0487  09F6               	comf	___awdiv@divisor,f
  3217  0488  09F7               	comf	___awdiv@divisor+1,f
  3218  0489  0AF6               	incf	___awdiv@divisor,f
  3219  048A  1903               	skipnz
  3220  048B  0AF7               	incf	___awdiv@divisor+1,f
  3221  048C                     l1429:
  3222  048C  01B7               	clrf	___awdiv@sign
  3223  048D  0AB7               	incf	___awdiv@sign,f
  3224  048E                     l1431:
  3225  048E  1FF9               	btfss	___awdiv@dividend+1,7
  3226  048F  2C91               	goto	u511
  3227  0490  2C92               	goto	u510
  3228  0491                     u511:
  3229  0491  2C9B               	goto	l1437
  3230  0492                     u510:
  3231  0492                     l1433:
  3232  0492  09F8               	comf	___awdiv@dividend,f
  3233  0493  09F9               	comf	___awdiv@dividend+1,f
  3234  0494  0AF8               	incf	___awdiv@dividend,f
  3235  0495  1903               	skipnz
  3236  0496  0AF9               	incf	___awdiv@dividend+1,f
  3237  0497                     l1435:
  3238  0497  3001               	movlw	1
  3239  0498  00FA               	movwf	??___awdiv
  3240  0499  087A               	movf	??___awdiv,w
  3241  049A  06B7               	xorwf	___awdiv@sign,f
  3242  049B                     l1437:
  3243  049B  01B8               	clrf	___awdiv@quotient
  3244  049C  01B9               	clrf	___awdiv@quotient+1
  3245  049D                     l1439:
  3246  049D  0876               	movf	___awdiv@divisor,w
  3247  049E  0477               	iorwf	___awdiv@divisor+1,w
  3248  049F  1903               	btfsc	3,2
  3249  04A0  2CA2               	goto	u521
  3250  04A1  2CA3               	goto	u520
  3251  04A2                     u521:
  3252  04A2  2CDA               	goto	l1459
  3253  04A3                     u520:
  3254  04A3                     l1441:
  3255  04A3  01B6               	clrf	___awdiv@counter
  3256  04A4  0AB6               	incf	___awdiv@counter,f
  3257  04A5  2CB1               	goto	l1447
  3258  04A6                     l1443:
  3259  04A6  3001               	movlw	1
  3260  04A7                     u535:
  3261  04A7  1003               	clrc
  3262  04A8  0DF6               	rlf	___awdiv@divisor,f
  3263  04A9  0DF7               	rlf	___awdiv@divisor+1,f
  3264  04AA  3EFF               	addlw	-1
  3265  04AB  1D03               	skipz
  3266  04AC  2CA7               	goto	u535
  3267  04AD                     l1445:
  3268  04AD  3001               	movlw	1
  3269  04AE  00FA               	movwf	??___awdiv
  3270  04AF  087A               	movf	??___awdiv,w
  3271  04B0  07B6               	addwf	___awdiv@counter,f
  3272  04B1                     l1447:
  3273  04B1  1FF7               	btfss	___awdiv@divisor+1,7
  3274  04B2  2CB4               	goto	u541
  3275  04B3  2CB5               	goto	u540
  3276  04B4                     u541:
  3277  04B4  2CA6               	goto	l1443
  3278  04B5                     u540:
  3279  04B5                     l1449:
  3280  04B5  3001               	movlw	1
  3281  04B6                     u555:
  3282  04B6  1003               	clrc
  3283  04B7  0DB8               	rlf	___awdiv@quotient,f
  3284  04B8  0DB9               	rlf	___awdiv@quotient+1,f
  3285  04B9  3EFF               	addlw	-1
  3286  04BA  1D03               	skipz
  3287  04BB  2CB6               	goto	u555
  3288  04BC  0877               	movf	___awdiv@divisor+1,w
  3289  04BD  0279               	subwf	___awdiv@dividend+1,w
  3290  04BE  1D03               	skipz
  3291  04BF  2CC2               	goto	u565
  3292  04C0  0876               	movf	___awdiv@divisor,w
  3293  04C1  0278               	subwf	___awdiv@dividend,w
  3294  04C2                     u565:
  3295  04C2  1C03               	skipc
  3296  04C3  2CC5               	goto	u561
  3297  04C4  2CC6               	goto	u560
  3298  04C5                     u561:
  3299  04C5  2CCD               	goto	l1455
  3300  04C6                     u560:
  3301  04C6                     l1451:
  3302  04C6  0876               	movf	___awdiv@divisor,w
  3303  04C7  02F8               	subwf	___awdiv@dividend,f
  3304  04C8  0877               	movf	___awdiv@divisor+1,w
  3305  04C9  1C03               	skipc
  3306  04CA  03F9               	decf	___awdiv@dividend+1,f
  3307  04CB  02F9               	subwf	___awdiv@dividend+1,f
  3308  04CC                     l1453:
  3309  04CC  1438               	bsf	___awdiv@quotient,0
  3310  04CD                     l1455:
  3311  04CD  3001               	movlw	1
  3312  04CE                     u575:
  3313  04CE  1003               	clrc
  3314  04CF  0CF7               	rrf	___awdiv@divisor+1,f
  3315  04D0  0CF6               	rrf	___awdiv@divisor,f
  3316  04D1  3EFF               	addlw	-1
  3317  04D2  1D03               	skipz
  3318  04D3  2CCE               	goto	u575
  3319  04D4                     l1457:
  3320  04D4  3001               	movlw	1
  3321  04D5  02B6               	subwf	___awdiv@counter,f
  3322  04D6  1D03               	btfss	3,2
  3323  04D7  2CD9               	goto	u581
  3324  04D8  2CDA               	goto	u580
  3325  04D9                     u581:
  3326  04D9  2CB5               	goto	l1449
  3327  04DA                     u580:
  3328  04DA                     l1459:
  3329  04DA  0837               	movf	___awdiv@sign,w
  3330  04DB  1903               	btfsc	3,2
  3331  04DC  2CDE               	goto	u591
  3332  04DD  2CDF               	goto	u590
  3333  04DE                     u591:
  3334  04DE  2CE4               	goto	l1463
  3335  04DF                     u590:
  3336  04DF                     l1461:
  3337  04DF  09B8               	comf	___awdiv@quotient,f
  3338  04E0  09B9               	comf	___awdiv@quotient+1,f
  3339  04E1  0AB8               	incf	___awdiv@quotient,f
  3340  04E2  1903               	skipnz
  3341  04E3  0AB9               	incf	___awdiv@quotient+1,f
  3342  04E4                     l1463:
  3343  04E4  0839               	movf	___awdiv@quotient+1,w
  3344  04E5  00F7               	movwf	?___awdiv+1
  3345  04E6  0838               	movf	___awdiv@quotient,w
  3346  04E7  00F6               	movwf	?___awdiv
  3347  04E8                     l470:
  3348  04E8  0008               	return
  3349  04E9                     __end_of___awdiv:
  3350                           
  3351                           	psect	text18
  3352  01D0                     __ptext18:	
  3353 ;; *************** function _I2C_Master_Write *****************
  3354 ;; Defined at:
  3355 ;;		line 65 in file "I2C.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  d               2    0[COMMON] unsigned int 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         2       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         2       0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 1
  3376 ;; This function calls:
  3377 ;;		_I2C_Master_Wait
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _I2C_Master_Write
  3385  01D0                     _I2C_Master_Write:
  3386  01D0                     l1543:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3389                           
  3390                           
  3391                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3392  01D0  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Wait
  3393  01D5                     l1545:
  3394                           
  3395                           ;I2C.c: 68:     SSPBUF = d;
  3396  01D5  0870               	movf	I2C_Master_Write@d,w
  3397  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3398  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3399  01D8  0093               	movwf	19	;volatile
  3400  01D9                     l168:
  3401  01D9  0008               	return
  3402  01DA                     __end_of_I2C_Master_Write:
  3403                           
  3404                           	psect	text19
  3405  01C7                     __ptext19:	
  3406 ;; *************** function _I2C_Master_Stop *****************
  3407 ;; Defined at:
  3408 ;;		line 55 in file "I2C.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 1
  3429 ;; This function calls:
  3430 ;;		_I2C_Master_Wait
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _I2C_Master_Stop
  3438  01C7                     _I2C_Master_Stop:
  3439  01C7                     l1547:	
  3440                           ;incstack = 0
  3441                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3442                           
  3443                           
  3444                           ;I2C.c: 57:     I2C_Master_Wait();
  3445  01C7  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Wait
  3446  01CC                     l1549:
  3447                           
  3448                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3449  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  3450  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  3451  01CE  1511               	bsf	17,2	;volatile
  3452  01CF                     l165:
  3453  01CF  0008               	return
  3454  01D0                     __end_of_I2C_Master_Stop:
  3455                           
  3456                           	psect	text20
  3457  01BE                     __ptext20:	
  3458 ;; *************** function _I2C_Master_Start *****************
  3459 ;; Defined at:
  3460 ;;		line 39 in file "I2C.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, pclath, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 1
  3481 ;; This function calls:
  3482 ;;		_I2C_Master_Wait
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _I2C_Master_Start
  3490  01BE                     _I2C_Master_Start:
  3491  01BE                     l1539:	
  3492                           ;incstack = 0
  3493                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3494                           
  3495                           
  3496                           ;I2C.c: 41:     I2C_Master_Wait();
  3497  01BE  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Wait
  3498  01C3                     l1541:
  3499                           
  3500                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3501  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  3502  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  3503  01C5  1411               	bsf	17,0	;volatile
  3504  01C6                     l159:
  3505  01C6  0008               	return
  3506  01C7                     __end_of_I2C_Master_Start:
  3507                           
  3508                           	psect	text21
  3509  02AF                     __ptext21:	
  3510 ;; *************** function _I2C_Master_Read *****************
  3511 ;; Defined at:
  3512 ;;		line 74 in file "I2C.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  a               2    0[COMMON] unsigned short 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  temp            2    4[COMMON] unsigned short 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2    0[COMMON] unsigned short 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3526 ;;      Params:         2       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0
  3528 ;;      Temps:          2       0       0       0       0
  3529 ;;      Totals:         6       0       0       0       0
  3530 ;;Total ram usage:        6 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 1
  3533 ;; This function calls:
  3534 ;;		_I2C_Master_Wait
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _I2C_Master_Read
  3542  02AF                     _I2C_Master_Read:
  3543  02AF                     l1551:	
  3544                           ;incstack = 0
  3545                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3546                           
  3547                           
  3548                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3549  02AF  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Wait
  3550  02B4                     l1553:
  3551                           
  3552                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3553  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  3554  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  3555  02B6  1591               	bsf	17,3	;volatile
  3556                           
  3557                           ;I2C.c: 79:     I2C_Master_Wait();
  3558  02B7  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Wait
  3559  02BC                     l1555:
  3560                           
  3561                           ;I2C.c: 80:     temp = SSPBUF;
  3562  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3563  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3564  02BE  0813               	movf	19,w	;volatile
  3565  02BF  00F2               	movwf	??_I2C_Master_Read
  3566  02C0  01F3               	clrf	??_I2C_Master_Read+1
  3567  02C1  0872               	movf	??_I2C_Master_Read,w
  3568  02C2  00F4               	movwf	I2C_Master_Read@temp
  3569  02C3  0873               	movf	??_I2C_Master_Read+1,w
  3570  02C4  00F5               	movwf	I2C_Master_Read@temp+1
  3571  02C5                     l1557:
  3572                           
  3573                           ;I2C.c: 81:     I2C_Master_Wait();
  3574  02C5  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Wait
  3575  02CA                     l1559:
  3576                           
  3577                           ;I2C.c: 82:     if(a == 1){
  3578  02CA  0370               	decf	I2C_Master_Read@a,w
  3579  02CB  0471               	iorwf	I2C_Master_Read@a+1,w
  3580  02CC  1D03               	btfss	3,2
  3581  02CD  2ACF               	goto	u661
  3582  02CE  2AD0               	goto	u660
  3583  02CF                     u661:
  3584  02CF  2AD4               	goto	l171
  3585  02D0                     u660:
  3586  02D0                     l1561:
  3587                           
  3588                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3589  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  3590  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  3591  02D2  1291               	bcf	17,5	;volatile
  3592                           
  3593                           ;I2C.c: 84:     }else{
  3594  02D3  2AD7               	goto	l172
  3595  02D4                     l171:
  3596                           
  3597                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3598  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  3599  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  3600  02D6  1691               	bsf	17,5	;volatile
  3601  02D7                     l172:	
  3602                           ;I2C.c: 86:     }
  3603                           
  3604                           
  3605                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3606  02D7  1611               	bsf	17,4	;volatile
  3607  02D8                     l1563:
  3608                           
  3609                           ;I2C.c: 88:     return temp;
  3610  02D8  0875               	movf	I2C_Master_Read@temp+1,w
  3611  02D9  00F1               	movwf	?_I2C_Master_Read+1
  3612  02DA  0874               	movf	I2C_Master_Read@temp,w
  3613  02DB  00F0               	movwf	?_I2C_Master_Read
  3614  02DC                     l173:
  3615  02DC  0008               	return
  3616  02DD                     __end_of_I2C_Master_Read:
  3617                           
  3618                           	psect	text22
  3619  01DA                     __ptext22:	
  3620 ;; *************** function _I2C_Master_Wait *****************
  3621 ;; Defined at:
  3622 ;;		line 32 in file "I2C.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_I2C_Master_Start
  3646 ;;		_I2C_Master_Stop
  3647 ;;		_I2C_Master_Write
  3648 ;;		_I2C_Master_Read
  3649 ;;		_I2C_Master_RepeatedStart
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _I2C_Master_Wait
  3655  01DA                     _I2C_Master_Wait:
  3656  01DA                     l1367:	
  3657                           ;incstack = 0
  3658                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3659                           
  3660  01DA                     l153:	
  3661                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3662                           
  3663  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  3664  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  3665  01DC  1914               	btfsc	20,2	;volatile
  3666  01DD  29DF               	goto	u421
  3667  01DE  29E0               	goto	u420
  3668  01DF                     u421:
  3669  01DF  29DA               	goto	l153
  3670  01E0                     u420:
  3671  01E0                     l1369:
  3672  01E0  0811               	movf	17,w	;volatile
  3673  01E1  391F               	andlw	31
  3674  01E2  1D03               	btfss	3,2
  3675  01E3  29E5               	goto	u431
  3676  01E4  29E6               	goto	u430
  3677  01E5                     u431:
  3678  01E5  29DA               	goto	l153
  3679  01E6                     u430:
  3680  01E6                     l156:
  3681  01E6  0008               	return
  3682  01E7                     __end_of_I2C_Master_Wait:
  3683  007E                     btemp	set	126	;btemp
  3684  007E                     wtemp0	set	126
  3685                           
  3686                           	psect	config
  3687                           
  3688                           ;Config register CONFIG1 @ 0x2007
  3689                           ;	Oscillator Selection bits
  3690                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3691                           ;	Watchdog Timer Enable bit
  3692                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3693                           ;	Power-up Timer Enable bit
  3694                           ;	PWRTE = OFF, PWRT disabled
  3695                           ;	RE3/MCLR pin function select bit
  3696                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3697                           ;	Code Protection bit
  3698                           ;	CP = OFF, Program memory code protection is disabled
  3699                           ;	Data Code Protection bit
  3700                           ;	CPD = OFF, Data memory code protection is disabled
  3701                           ;	Brown Out Reset Selection bits
  3702                           ;	BOREN = OFF, BOR disabled
  3703                           ;	Internal External Switchover bit
  3704                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3705                           ;	Fail-Safe Clock Monitor Enabled bit
  3706                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3707                           ;	Low Voltage Programming Enable bit
  3708                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3709                           ;	In-Circuit Debugger Mode bit
  3710                           ;	DEBUG = 0x1, unprogrammed default
  3711  2007                     	org	8199
  3712  2007  20D4               	dw	8404
  3713                           
  3714                           ;Config register CONFIG2 @ 0x2008
  3715                           ;	Brown-out Reset Selection bit
  3716                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3717                           ;	Flash Program Memory Self Write Enable bits
  3718                           ;	WRT = OFF, Write protection off
  3719  2008                     	org	8200
  3720  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> conver@temporal(BANK0[16]), STR_1(CODE[15]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_LECT2
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_String->_conver
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT3->___awdiv
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_conver
    _setup->_I2C_Master_Init
    _Lcd_Write_String->_conver
    _LECT3->___awdiv
    _LECT2->___awdiv
    _LECT1->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11300
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _LECT1
                              _LECT2
                              _LECT3
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _conver
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _conver                                              20    18      2     603
                                              0 COMMON     3     1      2
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
                             _conver (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT3                                                4     4      0    3166
                                              4 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT2                                                3     3      0    2314
                                             11 COMMON     3     3      0
                            ___awdiv
                             ___bmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                8     8      0    3166
                                              4 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     852
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     624
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1668
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     706
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     _num_ascii
   _LECT3
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _conver (ARG)
   _conver
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 10 00:16:57 2021

                        pc 0002             ___bmul@product 0072               ___awdiv@sign 0037  
                       fsr 0004        ___wmul@multiplicand 0072                        _AC1 0028  
                      _AC2 0027                        l101 06B0                        _AC3 0026  
                      _AD1 0025                        l110 0419                        _AD2 0024  
                      _AD3 0023                        l200 0240                        l113 0596  
                      l121 06A5                        l203 01FA                        l107 02AE  
                      l220 0353                        l116 0392                        l150 0314  
                      l153 01DA                        l209 03D4                        l171 02D4  
                      l156 01E6                        l172 02D7                        l173 02DC  
                      l165 01CF                        l317 0271                        l159 01C6  
                      l343 020F                        l319 0289                        l168 01D9  
                      l185 01B5                        l353 047F                        l188 0227  
                      l197 0264                        l470 04E8                        _AU1 0022  
                      _AU2 0021                        _AU3 0020                        _GIE 005F  
                      u400 0477                        u401 0476                        u410 02F4  
                      u420 01E0                        u500 0487                        u340 042A  
                      u421 01DF                        u501 0486                        u341 0429  
                      u430 01E6                        u510 0492                        u431 01E5  
                      u511 0491                        u415 02EF                        u520 04A3  
                      u440 026B                        u600 0247                        u360 043E  
                      u521 04A2                        u441 026A                        u601 0246  
                      u361 043D                        u610 0259                        u611 0258  
                      u355 042F                        u540 04B5                        u620 03A0  
                      u380 0459                        u541 04B4                        u381 0458  
                      u470 0285                        u630 03C2                        u535 04A7  
                      u471 0284                        u455 0272                        u375 0440  
                      u560 04C6                        u480 0201                        u640 03D4  
                      u561 04C5                        u481 0200                        u465 0279  
                      u641 03D3                        u385 0455                        u490 020E  
                      u650 059F                        u555 04B6                        u491 020D  
                      u651 059E                        u395 0469                        u707 078F  
                      u660 02D0                        u580 04DA                        u661 02CF  
                      u581 04D9                        u565 04C2                        u717 07B8  
                      u590 04DF                        u591 04DE                        u575 04CE  
                      u727 07E8                        u737 01F5                        u747 0220  
                      u677 0711                        u687 073D                        _NUM 0032  
                      u697 0763                        _POT 0035                        _Un1 002B  
                      _Un2 002A                        _Un3 0029                        fsr0 0004  
                      indf 0000                       l1311 031B                       l1401 0278  
                     l1305 0319                       l1411 01FD                       l1403 027F  
                     l1323 031F                       l1413 0201                       l1405 0285  
                     l1341 0325                       l1317 031D                       l1253 01B1  
                     l1261 043A                       l1431 048E                       l1423 0480  
                     l1415 0205                       l1335 0323                       l1503 04E9  
                     l1511 0354                       l1271 0468                       l1263 043E  
                     l1255 041A                       l1441 04A3                       l1433 0492  
                     l1425 0483                       l1417 0207                       l1409 01FC  
                     l1353 0329                       l1329 0321                       l1361 032B  
                     l1505 0575                       l1513 037C                       l1521 061F  
                     l1273 0471                       l1265 0447                       l1257 042A  
                     l1281 02E1                       l1601 0747                       l1451 04C6  
                     l1443 04A6                       l1435 0497                       l1427 0487  
                     l1419 020E                       l1347 0327                       l1291 0316  
                     l1507 0580                       l1515 0387                       l1531 0669  
                     l1523 062A                       l1371 0211                       l1267 0459  
                     l1259 042D                       l1275 0477                       l1283 02E4  
                     l1611 076D                       l1603 0750                       l1541 01C3  
                     l1461 04DF                       l1453 04CC                       l1445 04AD  
                     l1437 049B                       l1429 048C                       l1293 0317  
                     l1509 058B                       l1533 067F                       l1525 0635  
                     l1517 0597                       l1381 0224                       l1373 0217  
                     l1269 0467                       l1285 0311                       l1621 0799  
                     l1613 0776                       l1605 0758                       l1367 01DA  
                     l1551 02AF                       l1543 01D0                       l1463 04E4  
                     l1455 04CD                       l1447 04B1                       l1439 049D  
                     l1535 068F                       l1519 059F                       l1527 0641  
                     l1375 021A                       l1391 01F3                       l1383 01E8  
                     l1287 0312                       l1279 02DD                       l1471 029D  
                     l1631 07C4                       l1623 07A2                       l1615 0784  
                     l1607 075D                       l1369 01E0                       l1561 02D0  
                     l1553 02B4                       l1545 01D5                       l1457 04D4  
                     l1449 04B5                       l1537 069A                       l1529 0665  
                     l1377 021B                       l1481 0247                       l1393 01F7  
                     l1385 01EE                       l1289 0313                       l1473 029E  
                     l1633 07CD                       l1625 07AB                       l1617 0789  
                     l1609 0768                       l1563 02D8                       l1555 02BC  
                     l1539 01BE                       l1547 01C7                       l1459 04DA  
                     l1395 0265                       l1379 021C                       l1483 024C  
                     l1387 01F1                       l1491 0393                       l1475 029F  
                     l1467 028A                       l1635 07DB                       l1627 07B0  
                     l1619 0794                       l1571 06C1                       l1557 02C5  
                     l1549 01CC                       l1397 0267                       l1477 0228  
                     l1485 0253                       l1389 01F2                       l1493 0396  
                     l1469 029A                       l1637 07E0                       l1629 07BF  
                     l1581 06F5                       l1573 06E1                       l1559 02CA  
                     l1399 026B                       l1487 0259                       l1479 0242  
                     l1495 03B2                       l1591 071B                       l1583 06FE  
                     l1575 06E6                       l1567 06A6                       l1489 025E  
                     l1497 03B8                       l1593 0724                       l1585 0706  
                     l1577 06EB                       l1569 06B8                       l1499 03D8  
                     l1595 0732                       l1587 070B                       l1579 06F0  
                     l1669 0333                       l1597 0737                       l1589 0716  
                     l1599 0742                       STR_1 0013                       _CONT 0033  
                     _PEIE 005E                       _TEMP 0034                       _Dec1 002E  
                     _Dec2 002D                       _Dec3 002C                       _Cen1 0031  
                     _Cen2 0030                       _Cen3 002F          ?_Lcd_Write_String 0073  
                     _main 06A6                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0228          ___bmul@multiplier 0073  
         ?_I2C_Master_Init 0036           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 04E9  
                    _ANSEL 0188            __end_of___lldiv 0480            ___awdiv@divisor 0076  
                    _LECT1 04E9                      _LECT2 0354                      _LECT3 0597  
          ___awdiv@counter 0036                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _setup 028A                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0241           __end_of_Lcd_Port 01B6  
          __initialization 07F3               __end_of_main 07F3                     ??_main 0047  
                   ?_LECT1 0070                     ?_LECT2 0070                     ?_LECT3 0070  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0078                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0014  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     ___bmul 01FB  
                   ___wmul 0265                  ??___awdiv 007A                  ??___lldiv 0078  
                   _conver 03D5           ___awdiv@quotient 0038            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC              __end_of_LECT1 0597  
            __end_of_LECT2 0393              __end_of_LECT3 06A6        ___bmul@multiplicand 0070  
           __pcstackCOMMON 0070              __end_of_setup 02AF                    ??_LECT1 003A  
                  ??_LECT2 007B                    ??_LECT3 003A             _Lcd_Set_Cursor 0241  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007E  
               __pbssBANK0 0020                 __pmaintext 06A6                    ?___bmul 0070  
                  ?___wmul 0070                    ?_conver 0070  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 0265         __size_of_num_ascii 003F                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 01E7                    _Lcd_Cmd 0210  
          __size_of___bmul 0015                    ___awdiv 0480                    ___lldiv 041A  
          __size_of___wmul 0025            __size_of_conver 0045            ?_Lcd_Set_Cursor 0074  
                  __ptext1 028A                    __ptext2 02DD                    __ptext3 041A  
                  __ptext4 03D5                    __ptext5 0393                    __ptext6 01E7  
                  __ptext7 0241                    __ptext8 0228                    __ptext9 0210  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 01B7     __end_of_Lcd_Write_Char 01FB  
     end_of_initialization 07FC          __end_of_num_ascii 0354  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0036           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
                _PORTEbits 0009                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078             __end_of___bmul 0210  
           __end_of___wmul 028A           _Lcd_Write_String 0393             __end_of_conver 041A  
      start_initialization 07F3          __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 003A          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                   ??___bmul 0071                   ??___wmul 0074  
                 ??_conver 0072            Lcd_Write_Char@a 0072                  ___latbits 0002  
            __pcstackBANK0 0036                   ?_Lcd_Cmd 0070           _I2C_Master_Start 01BE  
         _I2C_Master_Write 01D0           ??_Lcd_Set_Cursor 0075                   ?___awdiv 0076  
                 ?___lldiv 0070                  __pstrings 0003             __size_of_LECT1 00AE  
           __size_of_LECT2 003F             __size_of_LECT3 010F             conver@temporal 0036  
           __size_of_setup 0025             ___wmul@product 0074                  clear_ram0 01B6  
                 Lcd_Cmd@a 0073                  _num_ascii 0315                __stringbase 0012  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                  conver@AC3 0046  
                conver@AD3 0070                  conver@AU3 0071                   _Lcd_Init 0228  
                 _Lcd_Port 01B0        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 03D5  
         __size_of_Lcd_Cmd 0018                 ?_num_ascii 0070           __size_of___awdiv 0069  
         __size_of___lldiv 0066         __end_of__stringtab 0013            _I2C_Master_Init 02DD  
          _I2C_Master_Read 02AF            _I2C_Master_Wait 01DA            _I2C_Master_Stop 01C7  
                 __ptext10 01B0                   __ptext11 0597                   __ptext20 01BE  
                 __ptext12 0354                   __ptext21 02AF                   __ptext13 04E9  
                 __ptext22 01DA                   __ptext14 0315                   __ptext15 0265  
                 __ptext16 01FB                   __ptext17 0480                   __ptext18 01D0  
                 __ptext19 01C7              __size_of_main 014D   __end_of_I2C_Master_Start 01C7  
 __end_of_I2C_Master_Write 01DA           ___lldiv@dividend 0074               num_ascii@num 0072  
                stringcode 000D                 _OSCCONbits 008F                ??_num_ascii 0070  
  __end_of_I2C_Master_Init 0315    __end_of_I2C_Master_Read 02DD    __end_of_I2C_Master_Wait 01E7  
  __end_of_I2C_Master_Stop 01D0         Lcd_Set_Cursor@temp 0077           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  
